{"version":3,"sources":["js/common/Constants.js","js/components/MyAlert.js","js/common/ForgotPassword.js","js/services/admin.service.js","js/common/OperationList.js","js/components/TableRow.js","js/components/TableHeader.js","js/common/ConfigureOperation.js","js/common/Profile.js","js/services/worker.service.js","js/components/Popup.js","js/services/auth.service.js","js/user/Login.js","images/Logo.png","js/common/Header.js","js/common/Footer.js","js/services/user.service.js","js/user/QuoteList.js","js/user/Quote.js","js/user/QuoteDetail.js","js/user/Dashboard.js","js/components/Sidebar.js","js/common/Utils.js","js/admin/EditQuote.js","js/admin/ManageQuote.js","js/admin/EditInventory.js","js/admin/ManageInventory.js","js/admin/EditOperations.js","js/admin/ManageOperations.js","js/admin/EditWorker.js","js/admin/ManageWorker.js","js/admin/EditProject.js","js/admin/ManageProjects.js","js/admin/EditCustomer.js","js/admin/ManageCustomer.js","js/admin/ManageInspections.js","js/admin/AdminDashboard.js","js/worker/WorkerOperations.js","js/worker/WorkerProjects.js","js/worker/WorkerTimesheet.js","js/worker/WorkerDashboard.js","js/common/Routes.js","reportWebVitals.js","index.js"],"names":["loginMessages","validationMessages","usersTag","MyAlert","alertConfig","Alert","variant","heading","Heading","message","ForgotPassword","forgotPassword","isEmail","state","Email","props","popupClose","setState","prevState","showAlert","bind","event","this","target","value","Fragment","Form","InputGroup","className","Input","type","onChange","placeholder","Button","color","onClick","Component","API_URL","axios","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","headers","token","error","Promise","reject","response","method","url","then","catch","console","log","quoteId","data","id","OperationList","listitems","searchValue","getAllOperationList","AdminService","getAllOperations","rows","selectedItem","filter","item","name","toLowerCase","includes","map","listitem","onOperationSelected","desc","onTagOperationSelectedSave","TableRow","listItem","reqQty","isSelected","onreqQntyChange","onCheckboxChange","checked","itemName","availability","cost","defaultValue","avail_per_day","cost_per_hr","TableHeader","headerObj","i","ConfigureOperation","handleCheckboxChange","changeEvent","obj","toolList","find","o","req_quantity","selectedToolList","push","tmpCost","totalCost","Inventories","tmpObj","showAlertMessage","handleWorkerCheckboxChange","workerList","total_hrs_req","selectedWorkerList","Workers","reqQntyChange","sObj","reqHourChange","createToolRow","option","createWorkerCheckbox","createTableHeader","tableHeader","createToolList","createWorkerList","getData","showTools","getAllTools","showWorkers","getAllWorkers","getAllInventory","msg","e","selectedObj","Table","responsive","saveConfigOperation","Profile","propertyName","CardGroup","Card","CardBody","handleChange","saveProfile","Popup","callback","list","parentCloseCallback","popupConfig","src","body","alt","button","parentConfirmCallback","Modal","show","openFlag","onHide","Header","closeButton","Title","header","Body","renderPopupBody","Footer","React","setItem","stringify","removeItem","username","email","password","post","Login","isPopupOpen","handleClose","Password","checkboxChecked","loginValidation","handleLogin","AuthService","loginWorker","history","login","userId","evt","Row","Col","md","lg","xl","role","LogoImage","Dropdown","as","ButtonGroup","userName","Toggle","split","Menu","Item","showProfile","href","logOut","QuoteList","activeId","getAllQuotes","parentCallback","UserService","title","aria-current","selectQuote","tools","tool","Date","createdAt","toLocaleDateString","status","updatedAt","Uploads","today","UserQuote","measuresObjId","newMeasuresArray","measures","startDate","endDate","uploads","createQuote","parentCreateCallBack","file","files","ReactS3Client","S3","bucketName","dirName","region","accessKeyId","secretAccessKey","newFileName","uploadFile","newUploads","location","err","tmpId","measuresObj","resetQuote","sendQuoteReq","htmlFor","handleFormChange","selected","handleDateChange","minDate","addMeasuresClick","length","handleMeasureChange","unit","qty","handleRemoveClick","hidden","handleFileInput","QuoteDetail","formInputList","dataFromParent","Measures","index","newObj","parentEditCallBack","editQuote","filename","fileName","deleteFile","filePath","showUploadImage","selectedQuote","renderMeasurementsSection","class","removeUploadedImage","savePOUrl","alert","linkPOUrl","renderUploadsSection","renderMeasurementsDetailSection","newQuote","isQuoteEditActive","saveQuote","renderEditQuote","renderQuoteDetails","Dashboard","isQuoteDetailActive","quoteItem","selectedQuoteId","selectedOuoteItem","childData","undefined","getSingleQuote","quoteEdit","quoteCreateCallBack","Quote","Sidebar","activeLink","leftMenu","selectMenu","menu","admin","data-toggle","selectMenuItem","statusColorClass","headerBtn","QuoteReqUpdate","open","operationsList","tagoperationList","inspectionsList","selectedInspection","selectedOperationId","configOpId","getOperations","getInspections","getAllInspection","inspections","handleReqAvailChange","min","max","Math","Number","QuoteOperation","workers","reduce","a","v","parseInt","newQuoteOperation","Operations","QuoteOperationInv","newInventryList","handleModalYes","tempList","deleteOpId","tmpSelectedItem","tmptoolobj","toolobj","tmpworkerobj","QuoteOperationWorker","workerobj","operation_total_hrs","operation_cost","tagQuote","showPopupMessage","changeStatus","opId","opName","inventory","userData","User","aria-label","handleBreadCrumb","changeQuoteStatus","resetReq","saveQuoteUpdate","submitQuoteUpdate","renderMeasureTable","submittedPO","InspectionId","handleInspectionChange","handleOperationChange","getCost","Accordion","operation","eventKey","deleteOperation","Collapse","showOperationTools","showOperationWorkers","ManageQuote","updateQuotePage","deleteQuote","EditQuote","renderQuoteList","showPopup","handleSearchChange","onQuotereqSelected","EditInventory","editInventoryPage","updateInventory","createInventory","itemDesc","supplierInfo","editInventory","saveInventory","operations_tagged","ManageInventory","deleteInventory","getAllInventoryList","addInventory","onInventorySelected","renderInventoryList","EditOperations","toolsList","selectedTool","getOperationById","selectedId","newToolItem","toolRequired","selectedOperation","OperationInventories","required_qty","OperationWorkers","required_hrs","est_cost","tmpInvobj","invobj","editOperation","createOperation","handleToolSelection","toolItem","addTools","req_avail","saveOperation","renderToolsList","ManageOperations","editOperationPage","deleteOperations","editOperations","addOperations","toolsRequired","toString","renderOperationsList","EditWorker","editWorkerPage","editWorker","createWorker","phone","address","total_avail_per_week","professionId","saveWorker","ManageWorker","deleteWorker","getAllWorkerList","addWorker","onWorkerSelected","renderWorkerList","EditProject","selectedWorker","start_date","end_date","editProject","changeProjectStatus","workerRequired","selectedProject","saveProject","handleWorkerSelection","statusChange","ManageProjects","editProjectPage","deleteProject","getAllProjectList","getAllProjects","projects","start","end","date1","diffInTime","getTime","round","deleteProjects","editProjects","onProjectSelected","getNumberOfDays","renderProjectList","EditCustomer","editCustomerPage","editCustomer","saveCustomer","ManageCustomer","deleteCustomer","getAllCustomerList","getAllCustomers","onCustomerSelected","Quotes","renderCustomerList","ManageInspection","editInspectionPage","deleteInspection","getAllInspectionList","editInspection","createInspection","saveInspection","saveTaxUpdate","addInspection","onInspectionSelected","renderInspectionList","renderEditInspection","renderTax","AdminDashboard","pageName","pageId","switchPage","ManageInspections","WorkerOperations","jsonData","operations","o_name","o_desc","hoursCommited","hoursLeft","WorkerProjects","p_name","p_desc","hours_commited","hours_left","p_status","WorkerSchedule","services","Day","Week","WorkWeek","Month","Agenda","WorkerDashboard","Routes","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","MyForm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e25c8981.chunk.js","sourcesContent":["export const loginMessages = {\n    SUCCESS: 'ALERT_SUCCESS',\n    ERROR: 'Something went wrong. Please try again.',\n    EMAILERROR: 'This is not a valid email',\n    REQUIRED: 'All fields are required!',\n    CLEAR: 'ALERT_CLEAR'\n};\nexport const validationMessages = {\n    NO_ITEM: 'Select one item',\n    DELETE_CONFIRM: \"Are you sure you want to delete \"\n};\nexport const usersTag = {\n    ADMIN_TAG: 6,\n    USER_TAG: 2,\n    WORKER_TAG: 1\n}\n\n/*\n\nVerified\n1. login\n2. sidebar.js, MyAlert.js Popup.js\n\n\ngit init .\ngit add .\ngit commit -a -m \"commit message goes here\"\ngit push\n\n*/","import React from 'react';\nimport Alert from 'react-bootstrap/Alert';\n\nfunction MyAlert({alertConfig}) {\n    return (\n      <>\n        <Alert variant={alertConfig.variant}>\n          {alertConfig.heading && <Alert.Heading>{alertConfig.heading}</Alert.Heading>}\n          <p>\n            {alertConfig.message}\n          </p>\n        </Alert>\n      </>\n    );\n  }\n\nexport default MyAlert;","import React, { Component } from 'react';\nimport { Button, Form, Input, InputGroup } from \"reactstrap\";\nimport { isEmail } from \"validator\";\n\nimport MyAlert from \"../components/MyAlert\";\nimport { loginMessages } from '../common/Constants';\n\nclass ForgotPassword extends Component {\n    constructor() {\n        super();\n        this.state = {\n            Email: '',\n            showAlert: false,\n            alertConfig: {\n                \"variant\": \"danger\"\n            },\n        }\n        this.Email = this.Email.bind(this);\n    }\n    Email(event) {\n        this.setState({ Email: event.target.value })\n    }\n    forgotPassword = () => {\n        if (!isEmail(this.state.Email)) {\n            this.setState(prevState => ({\n                alertConfig: {\n                    ...prevState.alertConfig,\n                    message: loginMessages.EMAILERROR\n                },\n                showAlert: true\n            }))\n        } else {\n            this.props.popupClose();\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Form>\n                    <InputGroup className=\"mb-3\">\n                        <Input type=\"text\" onChange={this.Email} placeholder=\"name@example.com\" />\n                    </InputGroup>\n                    <Button color=\"success\" onClick={this.forgotPassword} >Submit</Button>\n                    {this.state.showAlert && < MyAlert alertConfig={this.state.alertConfig} showAlert={this.state.showAlert} />}\n                </Form>\n            </React.Fragment>\n        );\n    }\n}\nexport default ForgotPassword;","import axios from 'axios';\n\nconst API_URL = \"https://funetus-api.herokuapp.com/admin/\";\n\n// Add a request interceptor\naxios.interceptors.request.use(\n    config => {\n        const user = JSON.parse(localStorage.getItem('user'));\n        if (user) {\n            config.headers['Authorization'] = 'Bearer ' + user.token;\n        }\n        config.headers['Content-Type'] = 'application/json';\n        return config;\n    },\n    error => {\n        Promise.reject(error)\n    });\n\naxios.interceptors.response.use((response) => {\n    return response\n},\n    function (error) {\n       // window.location.href = `/`;\n        return Promise.reject(error);\n    });\n\n\nclass AdminService {\n\n    getAllQuotes() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'quotes'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getSingleQuote(quoteId) {\n        var config = {\n            method: 'get',\n            url: API_URL + 'quotes/' + quoteId\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    deleteQuote(quoteId) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'quotes/' + quoteId\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    changeStatus(quoteId,data) {\n        var config = {\n            method: 'post',\n            url: API_URL + '/quotes/'+quoteId+'/changeStatus',\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    tagQuote(data) {\n        //https://funetus-api.herokuapp.com/admin/quotes/tagQuotes\n        var config = {\n            method: 'PUT',\n            url: API_URL + 'quotes/tagQuotes',\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getAllWorkers() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'workers'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    createWorker(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'workers',\n            data: data\n        };\n        \n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    deleteWorker(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'workers/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    editWorker(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'workers/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getAllOperations() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'operation'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    getOperationById(id) {\n        var config = {\n            method: 'get',\n            url: API_URL + 'operation/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    deleteOperation(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'operation/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    createOperation(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'operation',\n            data: data\n        };\n        console.log(config);\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    editOperation(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'operation/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getAllInventory() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'inventory'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    createInventory(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'inventory',\n            data: data\n        };\n        console.log(config);\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    editInventory(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'inventory/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    deleteInventory(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'inventory/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    getAllProjects() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'project'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    deleteProject(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'project/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    editProject(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'project/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    \n    getAllCustomers() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'customer'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    deleteCustomer(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'customer/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    editCustomer(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'customer/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    \n\n    getAllInspection() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'inspection'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    createInspection(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'inspection',\n            data: data\n        };\n        console.log(config);\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    editInspection(id,data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'inspection/'+id,\n            data: data\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    deleteInspection(id) {\n        var config = {\n            method: 'DELETE',\n            url: API_URL + 'Inspection/' + id\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changeProjectStatus(id, data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'project/changeStatus/'+ id,\n            data: data\n        };\n        return axios(config)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n}\n\nexport default new AdminService();","import React, { Component } from 'react';\n\nimport AdminService from \"../services/admin.service\";\n\nimport Checkbox from \"../components/Checkbox\";\n\nclass OperationList extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            listitems: [],\n            searchValue: \"\"\n        }\n        this.getAllOperationList();\n    }\n\n    getAllOperationList() {\n        AdminService.getAllOperations().then(\n            response => {\n                console.log(response);\n                debugger;\n                this.setState({\n                    listitems: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    onTagOperationSelectedSave() {\n        this.props.popupClose(this.state.selectedItem);\n    }\n\n    onOperationSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"admin-list-page\">\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Operation Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n\n                        </div>\n\n                        <div className=\"quote-req-table\">\n                            {this.state.listitems && this.state.listitems.filter(item =>\n                                item.name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"operationItem\" value={listitem.id}\n                                                    onChange={() => this.onOperationSelected(listitem)} />\n                                                {listitem.name}\n                                            </label>\n\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.desc}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                        <button onClick={() => this.onTagOperationSelectedSave()} className=\"btn btn-success btn-sm\" >Save</button>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n\n    }\n}\nexport default OperationList;","import React from \"react\";\n\nconst TableRow = ({ type, listItem, reqQty, isSelected, onreqQntyChange, onCheckboxChange }) => {\n\n  switch (type) {\n    case 'tool':\n      return (<tr key=\"inveRow\">\n        <td key=\"0\">\n          <input\n            type=\"checkbox\"\n            name={listItem.id}\n            checked={isSelected}\n            onChange={onCheckboxChange}\n          />\n        </td>\n        <td key=\"1\" >{listItem.itemName}</td>\n        <td key=\"2\">{listItem.availability}</td>\n        <td key=\"3\">{listItem.cost}</td>\n        <td key=\"4\" >\n          <input\n            type=\"number\"\n            name={listItem.id}\n            defaultValue={reqQty}\n            onChange={onreqQntyChange}\n          />\n        </td>\n\n      </tr>);\n    case 'worker':\n      return (<tr key=\"workerRow\">\n        <td key=\"5\">\n          <input\n            type=\"checkbox\"\n            name={listItem.id}\n            checked={isSelected}\n            onChange={onCheckboxChange}\n          />\n        </td>\n        <td key=\"6\">{listItem.name}</td>\n        <td key=\"7\">{listItem.avail_per_day}</td>\n        <td key=\"8\">{listItem.cost_per_hr}</td>\n        <td key=\"9\" >\n          <input\n            type=\"number\"\n            name={listItem.id}\n            defaultValue={reqQty}\n            onChange={onreqQntyChange}\n          />\n        </td>\n      </tr>);\n    default:\n      return;\n  }\n}\n\nexport default TableRow;","import React from \"react\";\n\nconst TableHeader = ({ headerObj, onCheckboxChange }) => {\n\n  return (\n    <tr className=\"green-text-color2\" key=\"tableHeade\">\n      {headerObj && headerObj.map((item, i) => {\n          if (item == \"inputCheckbox\") {\n            return (\n              <th key=\"0\" >\n                <input type=\"checkbox\" name=\"selectAllTools\" />\n              </th>\n            )\n          } else {\n            return (\n              <th key={item}>{item}</th>\n            )\n          }\n        }\n      )}\n    </tr>\n  );\n}\n\nexport default TableHeader;","import React, { Component } from 'react';\nimport { Table } from 'reactstrap';\n\nimport Checkbox from \"../components/Checkbox\";\nimport TableRow from \"../components/TableRow\";\nimport TableHeader from \"../components/TableHeader\";\nimport AdminService from \"../services/admin.service\";\nimport MyAlert from \"../components/MyAlert\";\n\nclass ConfigureOperation extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            listitems: [],\n            toolList: [],\n            workerList: [],\n            searchValue: \"\",\n            selectedToolList: [],\n            selectedWorkerList: [],\n            showAlert: false,\n            alertConfig: {\n                \"variant\": \"danger\"\n            },\n            totalCost: 0\n        }    \n        this.getData();\n    }\n\n    getData() {\n        if(this.props.showTools) {\n            this.getAllTools();\n        }\n        if(this.props.showWorkers) {\n            this.getAllWorkers();\n        }\n    }\n\n    getAllTools() {\n        AdminService.getAllInventory().then(\n            response => {\n                this.setState({\n                    toolList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    getAllWorkers() {\n        AdminService.getAllWorkers().then(\n            response => {\n                this.setState({\n                    workerList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    showAlertMessage(msg) {\n        this.setState(prevState => ({\n            alertConfig: { \n                ...prevState.alertConfig,\n                message: msg\n            },\n            showAlert: true \n        }))\n    }\n\n    handleCheckboxChange = changeEvent => {\n        const { name } = changeEvent.target;\n        let obj =[]; obj[\"Inventories\"] = this.state.toolList.find(o => o.id == name);\n        obj[\"req_quantity\"] = this.state.toolList.find(o => o.id == name).req_quantity;\n\n        if(!this.state.toolList.find(o => o.id == name).req_quantity){\n            this.showAlertMessage(\"Please add required quantity\");\n            changeEvent.target.checked = false;\n        }\n        else {\n            \n            this.setState({\n                showAlert: false\n            });\n            if (changeEvent.target.checked) {\n                this.state.selectedToolList.push(obj);\n                var tmpCost = this.state.totalCost + (obj.Inventories.cost * obj.Inventories.req_quantity);\n                this.setState({\n                    totalCost: tmpCost\n                });\n            } else {\n                let tmpObj = this.state.selectedToolList.filter(item => item.id !== name);\n                this.state.selectedToolList = tmpObj;\n                var tmpCost = this.state.totalCost - (obj.Inventories.cost * obj.Inventories.req_quantity);\n                this.setState({\n                    totalCost: tmpCost\n                });\n            }\n        }\n    };\n\n    handleWorkerCheckboxChange = changeEvent => {\n\n        const { name } = changeEvent.target;\n        let obj =[]; obj[\"Workers\"]= this.state.workerList.find(item => item.id == name);\n        obj[\"total_hrs_req\"] = this.state.workerList.find(item => item.id == name).total_hrs_req;\n\n        if(!this.state.workerList.find(o => o.id == name).total_hrs_req){\n            this.showAlertMessage(\"Please add required hours\");\n            changeEvent.target.checked = false;\n        }\n        else {\n            this.setState({\n                showAlert: false\n            });\n\n            if (changeEvent.target.checked) {\n                this.state.selectedWorkerList.push(obj)\n                var tmpCost = this.state.totalCost + (obj.Workers.cost_per_hr * obj.Workers.total_hrs_req);\n                this.setState({\n                    totalCost: tmpCost\n                });\n\n            } else {\n                let tmpObj = this.state.selectedWorkerList.filter(item => item.id != name);\n                this.state.selectedWorkerList = tmpObj;\n                var tmpCost = this.state.totalCost - (obj.Workers.cost_per_hr * obj.Workers.total_hrs_req);\n                this.setState({\n                    totalCost: tmpCost\n                });\n            }\n        }\n    };\n\n    reqQntyChange = changeEvent => {\n        const { name } = changeEvent.target;\n        let obj =[]; obj = this.state.toolList;\n        let sObj = []; sObj = this.state.selectedToolList;\n        if(obj.find(o => o.id == name)) {\n            obj.find(o => o.id == name)['req_quantity'] = changeEvent.target.value;\n        }\n        if(sObj.find(o => o.Inventories.id == name)) {\n            sObj.find(o => o.Inventories.id == name)['req_quantity'] = changeEvent.target.value;\n        }\n        this.setState({\n            toolList: obj,\n            selectedToolList: sObj\n        });\n    };\n    reqHourChange = changeEvent => {\n        const { name } = changeEvent.target;\n        \n        let obj =[]; obj = this.state.workerList;\n        let sObj = []; sObj = this.state.selectedWorkerList;\n        if(obj.find(o => o.id == name)) {\n            obj.find(o => o.id == name)['total_hrs_req'] = changeEvent.target.value;\n        }\n        if(sObj.find(o => o.Workers.id == name)) {\n            sObj.find(o => o.Workers.id == name)['total_hrs_req'] = changeEvent.target.value;\n        }\n        this.setState({\n            workerList: obj,\n            selectedWorkerList: sObj\n        }); \n    };\n\n    createToolRow = option => (\n        <TableRow\n            type=\"tool\"\n            listItem={option}\n            onCheckboxChange={this.handleCheckboxChange}\n            onreqQntyChange = {this.reqQntyChange}\n        />\n    );\n\n    createWorkerCheckbox = option => (\n        <TableRow\n            type=\"worker\"\n            listItem={option}\n            onCheckboxChange={this.handleWorkerCheckboxChange}\n            onreqQntyChange = {this.reqHourChange}\n        />\n    );\n    createTableHeader = (type) => {\n        var tableHeader = [];\n        if (type === \"tool\") {\n            tableHeader = [\"inputCheckbox\", \"Tool Name\", \"Available Quantity\", \"Required Quantity\", \"Cost\"];\n            return (\n                <TableHeader\n                    headerObj={tableHeader}\n                    onCheckboxChange={this.handleCheckboxChange}\n                />\n            );\n        } else if (\"worker\") {\n            tableHeader = [\"inputCheckbox\", \"Worker Name\", \"Available per Day\", \"Cost per Hour\", \"Required Hours\"];\n            return (\n                <TableHeader\n                    headerObj={tableHeader}\n                    onCheckboxChange={this.handleWorkerCheckboxChange}\n                />\n            );\n        }\n    };\n    createToolList = () => (\n        this.state.toolList.filter(item => item.itemName.toLowerCase().includes(this.state.searchValue)).map(this.createToolRow)\n    );\n    createWorkerList = () => (\n        this.state.workerList.filter(item => item.name.toLowerCase().includes(this.state.searchValue)).map(this.createWorkerCheckbox)\n    );\n    saveConfigOperation(e) {\n        var selectedObj = {};\n        selectedObj['tools'] = this.state.selectedToolList;\n        selectedObj['workers'] = this.state.selectedWorkerList;\n        selectedObj['totalCost'] = this.state.totalCost;\n        this.props.popupClose(selectedObj);\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                \n                {this.props.showTools && <div>\n                    <span className=\"underline blue\">Add Tools</span>\n                    <Table responsive=\"sm\">\n                        <tbody>\n                            {this.createTableHeader(\"tool\")}\n                            {this.createToolList()}\n                        </tbody>\n                    </Table>\n                    </div>\n                }\n                {this.props.showWorkers && \n                <div>\n                    <span className=\"underline blue\">Add Worker</span>\n\n                    <Table responsive=\"sm\">\n                        <tbody>\n                            {this.createTableHeader(\"worker\")}\n                            {this.createWorkerList()}\n                        </tbody>\n                    </Table>\n\n                </div>\n                }\n                <button onClick={this.saveConfigOperation.bind(this)} className=\"btn btn-success btn-sm\" > Save </button>\n\n                {this.state.showAlert && < MyAlert alertConfig = {this.state.alertConfig} showAlert={this.state.showAlert} /> }\n\n            </React.Fragment>\n        );\n\n    }\n}\nexport default ConfigureOperation;","import React, { Component } from 'react';\nimport { Button, Card, CardBody, CardGroup, Col, Form, Input, InputGroup, Row } from \"reactstrap\";\nimport WorkerService from \"../services/worker.service\";\n\nclass Profile extends Component {\n    state = {\n        item:{}\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    saveProfile() {\n        var data = this.state.item;\n       console.log(data);\n       /* WorkerService.updateWorkerProfile(id, data).then(\n            response => {\n                console.log(response);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        ); \n        */\n    }\n    render() {\n        return (\n            <React.Fragment>\n\n                <CardGroup>\n                    <Card className=\"p-2\">\n                        <CardBody>\n                            <Form>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Enter Name\" onChange={this.handleChange.bind(this, 'name')} />\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Enter Phone Number\" onChange={this.handleChange.bind(this, 'phone')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Enter Address\" onChange={this.handleChange.bind(this, 'address')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Enter Email\" onChange={this.handleChange.bind(this, 'email')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Availability per day\" onChange={this.handleChange.bind(this, 'avail_per_day')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Cost per hour\" onChange={this.handleChange.bind(this, 'cost_per_hr')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3\">\n                                    <Input type=\"text\" placeholder=\"Profession\" onChange={this.handleChange.bind(this, 'professionId')}/>\n                                </InputGroup>\n                                <InputGroup className=\"mb-3 justify-content-center\">\n                                    <Button color=\"success\"  onClick={() => this.saveProfile()}>Save</Button>\n                                </InputGroup>\n                            </Form>\n                        </CardBody>\n                    </Card>\n                </CardGroup>\n\n            </React.Fragment>\n        );\n    }\n}\nexport default Profile;","import axios from 'axios';\n\nconst API_URL = \"https://funetus-api.herokuapp.com/\";\n\nclass WorkerService {\n\n    updateWorkerProfile(id, data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'worker/' + id,\n            data: data\n        };\n        return axios(config)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n}\n\nexport default new WorkerService();","import React from 'react';\nimport { Button } from 'reactstrap';\nimport Modal from \"react-bootstrap/Modal\";\nimport ForgotPassword from \"../common/ForgotPassword\";\nimport OperationList from \"../common/OperationList\";\nimport ConfigureOperation from \"../common/ConfigureOperation\";\nimport Profiile from \"../common/Profile\";\n\nclass Popup extends React.Component {\n\n  callback = (list) => {\n    this.props.parentCloseCallback(list);\n  }\n\n  renderPopupBody() {  \n    switch(this.props.popupConfig.type) {\n      case 'forgotPassword':\n        return <ForgotPassword popupClose={this.props.parentCloseCallback}></ForgotPassword>;\n      case 'toolsList':\n        return <ConfigureOperation showTools={true} popupClose={this.callback}></ConfigureOperation>;\n      case 'workerList':\n        return <ConfigureOperation showWorkers={true} popupClose={this.callback}></ConfigureOperation>;\n      case 'configureOperation':\n        return <ConfigureOperation showTools={true} showWorkers={true} popupClose={this.callback}></ConfigureOperation>;\n      case 'operationList':\n        return <OperationList popupClose={this.callback}></OperationList>;\n      case 'image':\n        return <img src={this.props.popupConfig.body} className='img-thumbnail' alt='...'></img> ;\n      case 'profile':\n          return <Profiile></Profiile> ;\n        default:\n        return this.props.popupConfig.body;\n    }\n  };\n\n  render() {\n    const popupConfigType = this.props.popupConfig.type;\n    let button;\n    if (popupConfigType === \"confirmation\") {\n      button = <Button color=\"success\" onClick={this.props.parentConfirmCallback}>Confirm Delete</Button>;\n    } \n    return (\n      <Modal show={this.props.openFlag} onHide={this.props.parentCloseCallback}>\n        <Modal.Header closeButton>\n          <Modal.Title>{this.props.popupConfig.header}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n        { this.renderPopupBody() }\n        </Modal.Body>\n        <Modal.Footer>\n          {button}\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default Popup;","import axios from \"axios\";\n\nconst API_URL = \"https://funetus-api.herokuapp.com/auth/\";\n\nclass AuthService {\n\n    login(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'login',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: data\n        };\n        return axios(config)\n            .then(function (response) {\n                if(response.data) {\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\n                }\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    loginWorker(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'workerLogin',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            data: data\n        };\n        return axios(config)\n            .then(function (response) {\n                if(response.data) {\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\n                }\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n\n    logout() {\n        localStorage.removeItem(\"user\");\n    }\n\n    register(username, email, password) {\n        return axios.post(API_URL + \"signup\", {\n            username,\n            email,\n            password\n        });\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n    }\n}\n\nexport default new AuthService();","import React, { Component } from \"react\";\nimport { Button, Card, CardBody, CardGroup, Col, Form, Input, InputGroup, Row } from \"reactstrap\";\nimport { isEmail } from \"validator\";\nimport {loginMessages, usersTag} from '../common/Constants';\nimport MyAlert from \"../components/MyAlert\";\nimport Popup from \"../components/Popup\";\nimport AuthService from \"../services/auth.service\";\n\nclass Login extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            Email: '',\n            Password: '',\n            showAlert: false,\n            alertConfig: {\n                \"variant\": \"danger\"\n            },\n            popupConfig: {},\n            isPopupOpen: false,\n            checkboxChecked: false\n        }\n        this.Password = this.Password.bind(this);\n        this.Email = this.Email.bind(this);\n        this.loginValidation = this.loginValidation.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    Email(event) {\n        this.setState({ Email: event.target.value })\n    }\n    Password(event) {\n        this.setState({ Password: event.target.value })\n    }\n    showAlertMessage(msg) {\n        this.setState(prevState => ({\n            alertConfig: { \n                ...prevState.alertConfig,\n                message: msg\n            },\n            showAlert: true \n        }))\n    }\n    loginValidation(event) {\n        if(this.state.Email === '' || this.state.Password === '') {\n            this.showAlertMessage(loginMessages.REQUIRED);\n        } else if (!isEmail(this.state.Email)) {\n            this.showAlertMessage(loginMessages.EMAILERROR);\n         } else {\n            this.handleLogin(event);\n         }\n    }\n    handleLogin(event) {\n        var data = JSON.stringify({\n            \"email\": this.state.Email,\n            \"password\": this.state.Password\n        });\n        if(this.state.checkboxChecked) {\n            AuthService.loginWorker(data).then(\n                response => {\n                    if (response && response.data) {\n                        this.props.history.push(\"/WorkerDashboard\");\n                    } else {\n                        this.showAlertMessage(loginMessages.ERROR);\n                    }\n                },\n                error => {\n                    this.showAlertMessage(loginMessages.ERROR);\n                }\n            );\n\n        } else {\n            AuthService.login(data).then(\n                response => {\n                    if (response && response.data) {\n                        if(response.data.userId === usersTag.USER_TAG) {\n                            this.props.history.push(\"/Dashboard\");\n                        } else if(response.data.userId === usersTag.ADMIN_TAG){\n                            this.props.history.push(\"/AdminDashboard\");\n                        } \n                    } else {\n                        this.showAlertMessage(loginMessages.ERROR);\n                    }\n                },\n                error => {\n                    this.showAlertMessage(loginMessages.ERROR);\n                }\n            );\n        }\n    }\n\n    forgotPassword  = () =>  {\n        this.setState({\n            isPopupOpen: true,\n            popupConfig : {\n                header: \"Forgot Password\",\n                body: \"\",\n                type: \"forgotPassword\"\n            }\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    };\n\n    handleChange(evt) {\n        this.setState({ checkboxChecked: evt.target.checked });\n    }\n\n\n    render() {\n        return (\n           <Row className=\"justify-content-center login-div\">\n                <Col md=\"9\" lg=\"7\" xl=\"6\">\n                    <CardGroup>\n                        <Card className=\"p-2\">\n                            <CardBody>\n                                <Form>\n                                    <InputGroup className=\"mb-3\">\n                                        <Input type=\"text\" onChange={this.Email} placeholder=\"Enter Email\" />\n                                    </InputGroup>\n                                    <InputGroup className=\"mb-4\">\n                                        <Input type=\"password\" onChange={this.Password} placeholder=\"Enter Password\" />\n                                    </InputGroup>\n                                    <input type=\"checkbox\" onChange={this.handleChange.bind(this)}></input> Login as worker\n                                    <p className=\"forgot-password text-right\">Forgot <span role=\"button\" className=\"text-primary\" onClick = {this.forgotPassword} >password?</span></p>                                   \n                                    <Button color=\"success\" onClick={this.loginValidation} >Login</Button>\n                                </Form>\n                                {this.state.showAlert && < MyAlert alertConfig = {this.state.alertConfig} /> }\n                            </CardBody>\n                        </Card>\n                    </CardGroup>\n                </Col>\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} ></Popup>\n            </Row>\n            \n        );\n    }\n}\nexport default Login;","export default __webpack_public_path__ + \"static/media/Logo.b78c8f36.png\";","import React, { Component } from 'react';\n\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Button, ButtonGroup } from 'reactstrap';\nimport LogoImage from '../../images/Logo.png';\nimport Popup from \"../components/Popup\";\n\nclass Header extends Component {\n    state = {\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n    }\n    handleClose = (list) => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n    logOut() {\n        localStorage.removeItem(\"user\");\n    }\n    showProfile() {\n        this.setState({\n            isPopupOpen: true,\n            popupConfig: {\n                header: \"Manage Profiile\",\n                body: \"\",\n                type: \"profile\"\n            }\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"page-header sticky-top\">\n                    <img className=\"logo-header\" alt=\"Logo\" src={LogoImage} />\n                    <div className=\"float-right\">\n                        <Dropdown as={ButtonGroup}>\n                            <Button >{JSON.parse(localStorage.getItem('user')).userName}</Button>\n                            <Dropdown.Toggle split variant=\"info\" id=\"dropdown-split-basic\" />\n                            <Dropdown.Menu>\n                                <Dropdown.Item onClick={() => this.showProfile()}>Profile</Dropdown.Item>\n                                <Dropdown.Item href=\"/\" onClick={() => this.logOut()}>Logout</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n                    </div>\n                </div>\n                <Popup popupConfig={this.state.popupConfig} openFlag={this.state.isPopupOpen} parentCloseCallback={this.handleClose}></Popup>\n            </React.Fragment>\n        );\n    }\n}\nexport default Header;","import React, { Component } from 'react';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"footer-div\">\n                    <span>2021 @ Fluents Machine Shop. All rights reserved</span>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default Footer;","import axios from 'axios';\n\nconst API_URL = \"https://funetus-api.herokuapp.com/\";\n\nclass UserService {\n\n    getAllQuotes() {\n        var config = {\n            method: 'get',\n            url: API_URL + 'quotes'\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    getSingleQuote(quoteId) {\n        var config = {\n            method: 'get',\n            url: API_URL + 'quotes/' + quoteId\n        };\n\n        return axios(config)\n            .then(function (response) {\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    createQuote(data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'quotes',\n            data: data\n        };\n        return axios(config)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    editQuote(quoteId, data) {\n        var config = {\n            method: 'put',\n            url: API_URL + 'quotes/' + quoteId,\n            data: data\n        };\n        return axios(config)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n    changeStatus(id, data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'quotes/'+ id +'/changeStatus',\n            data: data\n        };\n        return axios(config)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    savePOUrl(id, data) {\n        var config = {\n            method: 'post',\n            url: API_URL + 'quotes/submitPOUrl/'+ id ,\n            data: data\n        };\n        return axios(config)\n            .then(function (response) {\n                console.log(response);\n                return response;\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n\n}\n\nexport default new UserService();","import React, { Component } from 'react';\nimport UserService from \"../services/user.service\";\n\nclass QuoteList extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.getAllQuotes();\n    }\n    \n\n    state = {\n        activeId : 0,\n        searchValue: \"\",\n        listitems: []\n\n    }\n\n    selectQuote(item) {\n        this.props.parentCallback(item);\n        this.setState({\n            activeId:item.id\n          });\n    }\n\n    getAllQuotes() {\n        UserService.getAllQuotes().then(\n            response => {\n                this.setState({\n                    listitems: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n\n    handleChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"list-group-header section-header row\">\n                    <div className=\"col-4\">\n                        <span className=\"mb-1 underline\">My Quote</span>\n                        <span className=\"mb-1 blue-color pl-2\">Requests</span>\n                    </div>\n                    <div className=\"col-8\">\n                        <div className=\"has-search\">\n                            <span className=\"fa fa-search form-control-feedback\"></span>\n                            <input type=\"text\" className=\"form-control search-box\" onChange={this.handleChange} placeholder=\"Search quotes...\" />\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"list-group\">\n\n                    {this.state.listitems && this.state.listitems.filter(item =>\n                        item.title.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                            <a className={\n                                (listitem.id === this.state.activeId ? \" active list-group-item list-group-item-action\" : \"list-group-item list-group-item-action\")\n                              }\n                            aria-current=\"true\" key={listitem.id} id={listitem.id} onClick={() => this.selectQuote(listitem)} >\n                                <div className=\"d-flex w-100 justify-content-between\">\n                                    <h5 className=\"mb-1 underline half\">{listitem.title}</h5>\n\n                                </div>\n                                <p className=\"mb-1 ellipses_two\">{listitem.desc}</p>\n                                <div>\n                                    {listitem.tools && listitem.tools.map(tool => (\n                                        <span className=\"badge tool-badge\">{tool}</span>\n                                    )\n                                    )}\n                                </div>\n                                <div className=\"row list-item-detail\">\n                                    <div className=\"col-2 calender-icon\">\n                                        <small>{(new Date(listitem.createdAt)).toLocaleDateString()}</small>\n                                    </div>\n                                    <div className=\"col-5 flag-icon\">\n                                        <small>{listitem.status}</small>\n                                        <span className=\"date-badge badge\">{(new Date(listitem.updatedAt)).toLocaleDateString()}</span>\n                                    </div>\n\n                                    <div className=\"col-3 attachment-icon\">\n                                        <small>{listitem.Uploads}</small>\n                                        <small> Attachments</small>\n                                    </div>\n                                    <div className=\"col-2 rightarrow-icon\">\n                                        <small>View details</small>\n                                    </div>\n                                </div>\n                            </a>\n\n                        ))}\n\n                </div>\n\n            </React.Fragment>\n        );\n    }\n}\nexport default QuoteList;","import React, { Component } from 'react';\nimport S3 from 'react-aws-s3';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport UserService from \"../services/user.service\";\n\nconst today = new Date();\nclass UserQuote extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: {},\n            measuresObjId: 1\n        }\n        this.state.item['measures']= [\n            {\n                \"id\": this.state.measuresObjId,\n                \"name\": \"\",\n                \"unit\": \"\",\n                \"qty\": \"\"\n            }\n        ];\n    }\n\n    resetQuote() {\n        this.setState({ \n            item: {},\n            measuresObjId: 1\n         });\n         var obj = this.state.item;\n         obj['measures']= [];\n        this.setState({item:obj});\n    }\n\n    sendQuoteReq() {\n\n        let newMeasuresArray = this.state.item.measures.map(function(item) { \n            delete item.id; \n            return item; \n        });\n\n        var data = {\n            \"title\": this.state.item.title,\n            \"desc\": this.state.item.desc,\n            \"status\": \"NEW\",\n            \"startDate\": this.state.item.startDate,\n            \"endDate\": this.state.item.endDate,\n            \"measures\": newMeasuresArray,\n            \"uploads\": this.state.item.uploads\n        };\n        UserService.createQuote(data).then(\n            response => {\n                this.props.parentCreateCallBack(response.data);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n\n    }\n\n    handleFileInput(e) {\n        const file = e.target.files[0];\n        if(file) {\n            const config = {\n                bucketName: 'fuentes-fileupload',\n                dirName: 'quote-attachments',\n                region: 'us-west-1',\n                accessKeyId: 'AKIA5ARA5MYMNVC47U6F',\n                secretAccessKey: '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'\n            }\n            const ReactS3Client = new S3(config);\n            const newFileName = file.name;\n    \n            ReactS3Client\n                .uploadFile(file, newFileName)\n                .then(data => {\n                    var newUploads = {\n                        \"fileName\": newFileName,\n                        \"filePath\": data.location\n                    };\n                    var obj = this.state.item;\n\n                    if(obj.uploads) {\n                        obj['uploads'].push(newUploads);\n                    } else {\n                        obj['uploads'] = [];\n                        obj['uploads'].push(newUploads);\n                    }\n                    this.setState({item:obj});\n\n                })\n                .catch(err => console.error(err))\n            \n        }   \n    }\n\n    handleFormChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    handleDateChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = new Date(event);\n        this.setState({ item: item });\n    }\n    handleMeasureChange(id,propertyName,event){\n        var tmpObj  = this.state.item;\n        tmpObj.measures.find(o => o.id == id)[propertyName] = event.target.value;\n        this.setState({item: tmpObj});\n    }\n\n    addMeasuresClick() {\n        let tmpObj = this.state.item;\n        let tmpId = this.state.measuresObjId + 1;\n        this.setState({measuresObjId: tmpId});\n\n        let measuresObj = {\n            \"id\": tmpId,\n            \"name\": \"\",\n            \"unit\": \"\",\n            \"qty\": \"\"\n        };\n        tmpObj.measures = [...tmpObj.measures, measuresObj];\n        this.setState({item: tmpObj});\n    }\n    handleRemoveClick(id,event) {\n        var tmpObj  = this.state.item;\n        tmpObj.measures = this.state.item.measures.filter(o => o.id != id);\n        this.setState({item: tmpObj});   \n    }\n\n\n    render() {\n        return (\n            <div className=\"app flex-row align-items-center\">\n                <div className=\"list-group-header section-header row\">\n                    <div className=\"col\">\n                        <span className=\"mb-1 underline\">Send New </span>\n                        <span className=\"mb-1 blue-color pl-2\">Quote Request</span>\n                    </div>\n                    <div className=\"col text-right\">\n                        <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetQuote()} >Reset</button>\n                        <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.sendQuoteReq()}>Send</button>\n                    </div>\n                </div>\n                <div className=\"blue-box-div\" id=\"create-quote-form\">\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" className=\"form-control\" id=\"title\"\n                            name=\"title\"\n                            defaultValue={this.state.item.title}\n                            onChange={this.handleFormChange.bind(this, 'title')}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description</label>\n                        <textarea className=\"form-control\" id=\"description\" rows=\"3\"\n\n                            defaultValue={this.state.item.desc && this.state.item.desc}\n                            onChange={this.handleFormChange.bind(this, 'desc')}\n\n                        ></textarea>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <div className=\"col\">\n                            <label >Start Date</label>\n                            <DatePicker\n                                selected={this.state.item.startDate && this.state.item.startDate}\n                                onChange={this.handleDateChange.bind(this, 'startDate')}\n                                className=\"form-control\"\n                                minDate={today}\n                            />\n                        </div>\n                        <div className=\"col\">\n                            <label >End Date</label>\n                            <DatePicker\n                                selected={this.state.item.endDate && this.state.item.endDate}\n                                onChange={this.handleDateChange.bind(this, 'endDate')}\n                                className=\"form-control\"\n                                minDate={this.state.item.startDate}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Measurements</label>\n                        <button className=\"btn add-btn\" onClick={() => this.addMeasuresClick()}></button>\n                       \n                        {this.state.item.measures.length > 0 && \n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <label>Name</label>\n                            </div>\n                            <div className=\"col\">\n                            <label>Unit</label>\n                            </div>\n                            <div className=\"col\">\n                            <label>Quantity</label>\n                            </div>\n                            <div className=\"col\">\n                            <label></label>\n                            </div>\n                        </div>\n                        }\n\n                        {this.state.item.measures && this.state.item.measures.map((item) => {\n                            return(\n                            <div className=\"row pb-2\" key={item.id}>\n                               <div className=\"col\">\n                                <input type=\"text\" className=\"form-control\"\n                                        defaultValue={item.name}\n                                        onChange={this.handleMeasureChange.bind(this, item.id, 'name')}\n                                    />\n                               </div>\n                               <div className=\"col\">\n                                \n                                    <input type=\"text\" className=\"form-control\"\n                                        defaultValue={item.unit}\n                                        onChange={this.handleMeasureChange.bind(this, item.id, 'unit')}\n                                    />\n                               </div>\n                               <div className=\"col\">\n                                \n                                    <input type=\"number\" className=\"form-control\"\n                                        defaultValue={item.qty}\n                                        onChange={this.handleMeasureChange.bind(this, item.id, 'qty')}\n                                    />\n                               </div>\n                               <div className=\"col\">\n                               <button\n                                className=\"btn measure-delete-btn \"\n                                onClick={this.handleRemoveClick.bind(this,item.id)}></button>\n                               </div>\n                            </div>\n                            )\n\n                        })\n\n                        }\n                    </div>\n\n                    <div>\n                        <label>Attachments</label>\n                        <label className=\"btn btn-blue btn-sm pr-4 pl-4 ml-2\">\n                            Browse <input type=\"file\" hidden onChange={this.handleFileInput.bind(this)}/>\n                        </label>\n                    </div>\n                </div>\n\n\n\n            </div>\n        );\n    }\n}\nexport default UserQuote;\n","import React, { Component } from 'react';\nimport S3 from 'react-aws-s3';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport UserService from \"../services/user.service\";\n\nimport Popup from \"../components/Popup\";\n\nconst today = new Date();\nclass QuoteDetail extends Component {\n    state = {\n        formInputList: this.props.dataFromParent.Measures,\n        selectedItem: this.props.dataFromParent,\n        measuresObjId: this.props.dataFromParent.Measures.length,\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n        let newMeasuresArray = this.state.selectedItem.Measures && this.state.selectedItem.Measures.map(function (item, index) {\n            item.id = index + 1;\n            return item;\n        });\n        let newObj = this.state.selectedItem;\n        newObj.Measures = newMeasuresArray;\n        this.setState({\n            selectedItem: newObj\n        })\n    }\n    handleFormChange(propertyName, event) {\n        var item = this.state.selectedItem;\n        item[propertyName] = event.target.value;\n        this.setState({ selectedItem: item });\n    }\n\n    handleDateChange(propertyName, event) {\n        var item = this.state.selectedItem;\n        item[propertyName] = new Date(event);\n        this.setState({ selectedItem: item });\n    }\n\n    handleMeasureChange(id, propertyName, event) {\n        var tmpObj = this.state.selectedItem;\n        tmpObj.Measures.find(o => o.id == id)[propertyName] = event.target.value;\n        this.setState({ selectedItem: tmpObj });\n    }\n\n    newQuote() {\n        this.props.parentCallback();\n    }\n    editQuote() {\n        this.props.parentEditCallBack();\n    }\n    saveQuote() {\n        let newMeasuresArray = this.state.selectedItem.Measures.map(function(item) { \n            delete item.id; \n            return item; \n        });\n\n        var data = {\n            \"title\": this.state.selectedItem.title,\n            \"desc\": this.state.selectedItem.desc,\n            \"measures\": newMeasuresArray\n        };\n        UserService.editQuote(this.state.selectedItem.id, data).then(\n            response => {\n                //this.props.parentCreateCallBack(response.data);\n                //console.log(response.data);\n                debugger;\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    addMeasuresClick() {\n        let tmpObj = this.state.selectedItem;\n        let tmpId = this.state.measuresObjId + 1;\n        this.setState({ measuresObjId: tmpId });\n\n        let measuresObj = {\n            \"id\": tmpId,\n            \"name\": \"\",\n            \"unit\": \"\",\n            \"qty\": \"\"\n        };\n        tmpObj.Measures = [...tmpObj.Measures, measuresObj];\n        this.setState({ selectedItem: tmpObj });\n    }\n\n    handleRemoveClick(id, event) {\n        \n        var tmpObj = this.state.selectedItem;\n        tmpObj.Measures = this.state.selectedItem.Measures.filter(o => o.id != id);\n        this.setState({ selectedItem: tmpObj }); \n    }\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n    removeUploadedImage(file) {\n\n\n        const config = {\n            bucketName: 'fuentes-fileupload',\n            dirName: 'quote-attachments',\n            region: 'us-west-1',\n            accessKeyId: 'AKIA5ARA5MYMNVC47U6F',\n            secretAccessKey: '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'\n        }\n       \n       \n        const ReactS3Client = new S3(config);\n\n        const filename = file.fileName;\n\n        ReactS3Client\n            .deleteFile(filename)\n            .then(response => console.log(response))\n            .catch(err => console.error(err))\n\n\n\n\n    }\n    showUploadImage(filePath) {\n        this.setState({\n            isPopupOpen: true,\n            popupConfig: {\n                header: \"Uploaded Data\",\n                body: filePath,\n                type: \"image\"\n            }\n        });\n    }\n    renderUploadsSection(uploads) {\n        return (\n        \n        <div className=\"form-group\">\n            <span className=\"underline blue\">Uploads</span>\n            {uploads && uploads.map((item, index) => {\n                return (\n                    <div className=\"row pb-2\" >\n                        <div className=\"col\">\n                            <button className=\"btn btn-link\" onClick={() => this.showUploadImage(item.filePath)}>{item.fileName}</button>\n                        </div>\n                    </div>\n                )\n            })\n\n            }\n        </div>\n        \n        \n        );\n    }\n    renderMeasurementsDetailSection(measures) {\n\n        return (<div className=\"form-group\">\n            <span className=\"underline blue\">Measurements</span>\n            {measures.length > 0 &&\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <label>Name</label>\n                    </div>\n                    <div className=\"col\">\n                        <label>Unit</label>\n                    </div>\n                    <div className=\"col\">\n                        <label>Quantity</label>\n                    </div>\n                </div>\n            }\n\n            {measures && measures.map((item, index) => {\n                return (\n                    <div className=\"row pb-2 green-text-color\" key={item.id}>\n                        <div className=\"col\">\n                            <label>{item.name}</label>\n                        </div>\n                        <div className=\"col\">\n                            <label>{item.unit}</label>\n                        </div>\n                        <div className=\"col\">\n                            <label>{item.qty}</label>\n                        </div>\n\n                    </div>\n                )\n            }\n            )\n\n            }\n        </div>);\n    }\n    renderMeasurementsSection(measures) {\n\n        return (<div className=\"form-group\">\n            <label>Measurements</label>\n            <button className=\"btn add-btn\" onClick={() => this.addMeasuresClick()}></button>\n\n            {measures.length > 0 &&\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <label>Name</label>\n                    </div>\n                    <div className=\"col\">\n                        <label>Unit</label>\n                    </div>\n                    <div className=\"col\">\n                        <label>Quantity</label>\n                    </div>\n                    <div className=\"col\">\n                        <label></label>\n                    </div>\n                </div>\n            }\n\n            {measures && measures.map((item, index) => {\n                return (\n                    <div className=\"row pb-2\" key={item.id}>\n                        <div className=\"col\">\n                            <input type=\"text\" className=\"form-control\"\n                                defaultValue={item.name}\n                                onChange={this.handleMeasureChange.bind(this, item.id, 'name')}\n                            />\n                        </div>\n                        <div className=\"col\">\n\n                            <input type=\"text\" className=\"form-control\"\n                                defaultValue={item.unit}\n                                onChange={this.handleMeasureChange.bind(this, item.id, 'unit')}\n                            />\n                        </div>\n                        <div className=\"col\">\n\n                            <input type=\"text\" className=\"form-control\"\n                                defaultValue={item.qty}\n                                onChange={this.handleMeasureChange.bind(this, item.id, 'qty')}\n                            />\n                        </div>\n                        <div className=\"col\">\n                            <button\n                                className=\"btn measure-delete-btn \"\n                                onClick={this.handleRemoveClick.bind(this, item.id)}></button>\n                        </div>\n                    </div>\n                )\n\n            })\n\n            }\n        </div>);\n    }\n\n    renderEditQuote() {\n        var selectedQuote = this.props.dataFromParent;\n        if (selectedQuote) {\n            return (\n                <div className=\"blue-box-div\">\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" className=\"form-control\" id=\"title\"\n                            defaultValue={selectedQuote.title}\n                            onChange={this.handleFormChange.bind(this, 'title')}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"description\">Description</label>\n                        <textarea className=\"form-control\" id=\"description\" rows=\"3\"\n                            defaultValue={selectedQuote.desc}\n                            onChange={this.handleFormChange.bind(this, 'desc')}\n                        ></textarea>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <div className=\"col\">\n                            <label >Start Date</label>\n                            <DatePicker\n                                selected={new Date(selectedQuote.startDate)}\n                                onChange={this.handleDateChange.bind(this, 'startDate')}\n                                className=\"form-control\"\n                                minDate={today}\n                            />\n                        </div>\n                        <div className=\"col\">\n                            <label >End Date</label>\n                            <DatePicker\n                                selected={new Date(selectedQuote.endDate)}\n                                onChange={this.handleDateChange.bind(this, 'endDate')}\n                                className=\"form-control\"\n                                minDate={new Date(selectedQuote.startDate)}\n                            />\n                        </div>\n                    </div>\n\n                    {this.renderMeasurementsSection(selectedQuote.Measures)}\n\n                    <div className=\"form-group\">\n                        <label>Attachments</label>\n                        <label className=\"btn btn-blue btn-sm pr-4 pl-4 ml-2\">\n                            Browse <input type=\"file\" hidden />\n                        </label>\n\n                        <div className=\"col-3 attachment-icon\">\n                            <small>{selectedQuote.Uploads && selectedQuote.Uploads.length}</small>\n                            <small>Attachments</small>\n                        </div>\n                        <div className=\"row pb-2\" >\n                            {selectedQuote.Uploads && selectedQuote.Uploads.map((item, index) => {\n                                return (\n                                    <div className=\"\">\n                                        <button className=\"btn btn-link\" onClick={() => this.showUploadImage(item.filePath)}>{item.fileName}</button>\n                                        <button class=\"btn remove-btn\" onClick={() => this.removeUploadedImage(item)}></button>\n                                    </div>\n                                )\n                            })\n                            }\n                        </div>\n\n                    </div>\n                </div>\n            )\n        }\n    }\n    \n    linkPOUrl(file){\n        var data = {\n            \"submit_PO\": file.location\n        };\n        UserService.savePOUrl(this.state.selectedItem.id, data).then(\n            response => {\n                alert(response.data.message);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    handleFileInput(e) {\n        const file = e.target.files[0];\n        if (file) {\n            const config = {\n                bucketName: 'fuentes-fileupload',\n                dirName: 'purchase-order',\n                region: 'us-west-1',\n                accessKeyId: 'AKIA5ARA5MYMNVC47U6F',\n                secretAccessKey: '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'\n            }\n            const ReactS3Client = new S3(config);\n            const newFileName = 'test-file';\n\n            ReactS3Client\n                .uploadFile(file, newFileName)\n                .then(data => {\n                    this.linkPOUrl(data);\n                    //TODO: Change status QUOTE_PO_SUBMIT\n                    // Save var newfilePath = data.location;\n                    \n                })\n                .catch(err => console.error(err))\n        }\n    }\n\n\n    renderQuoteDetails() {\n        if (this.props.dataFromParent) {\n            return (\n                <div className=\"blue-box-div\">\n                    <div>\n                        <span className=\"underline blue\">Title</span>\n                        <p>{this.props.dataFromParent.title}</p>\n                    </div>\n                    <div>\n                        <span className=\"underline blue\">Description</span>\n                        <p>{this.props.dataFromParent.desc}</p>\n                    </div>\n\n                    <div className=\"row\">\n                        \n                        <div className=\"col\">\n                            <span className=\"underline blue mb-2\">Submitted On</span>\n                            <p>{(new Date(this.props.dataFromParent.createdAt)).toLocaleDateString()}</p>\n                        </div>\n                        <div className=\"col\">\n                            <span className=\"underline blue\">Tentitive Start Date</span>\n                            <p>{(new Date(this.props.dataFromParent.startDate)).toLocaleDateString()}</p>\n                        </div>\n                        <div className=\"col\">\n                            <span className=\"underline blue\">Tentitive End Date</span>\n                            <p>{(new Date(this.props.dataFromParent.endDate)).toLocaleDateString()}</p>\n                        </div>\n                    </div>\n                    {this.renderUploadsSection(this.props.dataFromParent.Uploads)}\n\n                    {this.props.dataFromParent.status == \"QUOTE_RECEIVED\" &&\n                    <div class=\"purchase-order d-inline-block form-group\">\n                        <span className=\"underline blue mb-2\">Order details</span>\n                        <div class=\"row ml-2\">\n                            <div class=\"col-md-8\">Operation Cost</div>\n                            <div class=\"col-md-2\">2</div>\n                            <div class=\"col-md-8\">Inspection Amount</div>\n                            <div class=\"col-md-2\">1</div>\n                            <div class=\"col-md-8\">Sub Total</div>\n                            <div class=\"col-md-2\">3</div>\n                            <div class=\"col-md-8\">Total tax</div>\n                            <div class=\"col-md-2\">5%</div>\n                            <div class=\"col-md-8\"></div>\n                            <div class=\"col-md-2\"></div>\n                            <div class=\"col-md-8\">Total Cost</div>\n                            <div class=\"col-md-2\">8</div>\n                        </div>\n                    </div>\n                    \n                }\n                   \n\n                   \n\n                    <div className=\"d-inline-block\">\n                        \n                        <div className=\"col\">\n                            <span className=\"underline blue mb-2\">Status</span>\n                            <p> {this.props.dataFromParent.status}\n\n                                {this.props.dataFromParent.status == \"QUOTE_RECEIVED\" &&\n                                    <label className=\"btn btn-green btn-sm pr-4 pl-4 ml-2\">\n                                        Submit P O <input type=\"file\" hidden onChange={this.handleFileInput.bind(this)} />\n                                    </label>\n                                }\n\n                            </p>\n                        </div>\n                    </div>\n\n\n                    {this.renderMeasurementsDetailSection(this.props.dataFromParent.Measures)}\n                </div>\n                /*<div className=\"blue-box-div\">\n                    <div>\n                        <span className=\"underline blue\">Title</span>\n                        <p>{this.props.dataFromParent.title}</p>\n                    </div>\n                    <div>\n                        <span className=\"underline blue\">Description</span>\n                        <p>{this.props.dataFromParent.desc}</p>\n                    </div>\n                    <div className=\"row\">\n                        <div className=\"col-sm-4\">\n                            <span className=\"underline blue\">Submitted On</span>\n                            <p>{(new Date(this.props.dataFromParent.createdAt)).toLocaleDateString()}</p>\n                        </div>\n                        <div className=\"col-sm\">\n                            <span className=\"underline blue\">Status</span>\n                            <p> {this.props.dataFromParent.status}\n                                <button type=\"button\" className=\"btn btn-blue btn-sm pr-2 pl-2 mr-2 ml-2\" >View</button>\n                                <button type=\"button\" className=\"btn btn-green btn-sm pr-2 pl-2\" >Submit PO</button>\n                            </p>\n                        </div>\n\n                    </div>\n                    <div>\n                        <span className=\"underline blue\" >Measurements</span>\n                    </div>\n\n                    {this.renderMeasurementHeader()}\n                    {this.props.dataFromParent.Measures && this.props.dataFromParent.Measures.map((x, i) => {\n                        return (this.renderMeasurements(x, i));\n                    })}\n\n                    <div>\n                        <span className=\"underline blue\" >Attachments</span>\n\n                        <div className=\"row mt-1\">\n                            {this.props.dataFromParent.Uploads && this.props.dataFromParent.Uploads.map((item) => {\n                                return (\n                                    <div className=\"col-sm\">\n                                        <span >{item['fileName']}</span>\n                                    </div>\n                                )\n                            })}\n                        </div>\n\n                    </div>\n                </div>*/\n\n            );\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Popup popupConfig={this.state.popupConfig} openFlag={this.state.isPopupOpen} parentCloseCallback={this.handleClose} ></Popup>\n\n                <div className=\"app flex-row align-items-center\" >\n\n                    <div className=\"list-group-header section-header row\">\n                        <div className=\"col\">\n                            <span className=\"mb-1 underline\">Quote </span>\n                            <span className=\"mb-1 blue-color pl-2\"> Detail</span>\n                        </div>\n                        <div className=\"col text-right\">\n                            <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.newQuote()}>New</button>\n\n\n                            {this.props.isQuoteEditActive\n                                ? <button type=\"button\" className=\"btn btn-green btn-sm pr-4 pl-4 ml-2\" onClick={() => this.saveQuote()}>Save</button>\n                                : <button type=\"button\" className=\"btn btn-green btn-sm pr-4 pl-4 ml-2\" onClick={() => this.editQuote()}>Edit</button>\n                            }\n\n                        </div>\n                    </div>\n\n                    {this.props.isQuoteEditActive\n                        ? this.renderEditQuote()\n                        : this.renderQuoteDetails()\n                    }\n\n                </div>\n            </React.Fragment>\n        );\n    }\n}\nexport default QuoteDetail;\n\n\n\n\n","import React, { Component } from 'react';\n\nimport Header from '../common/Header';\nimport Footer from '../common/Footer';\n\nimport Popup from \"../components/Popup\";\n\nimport QuoteList from './QuoteList';\nimport Quote from './Quote';\nimport QuoteDetail from './QuoteDetail' ;\n\nimport UserService from \"../services/user.service\";\n\nclass Dashboard extends Component {\n    state = {\n        isQuoteDetailActive:false,\n        quoteItem : null,\n        selectedQuoteId: null,\n        popupConfig: {},\n        isPopupOpen: false\n     }\n     selectedOuoteItem = (childData) =>{\n        if(childData !== undefined){\n            this.getSingleQuote(childData.id);\n        } else {\n            this.setState({\n                isQuoteDetailActive:false,\n                isQuoteEditActive: false\n              });\n        }\n        \n    }\n\n    handleClose = () => {\n      this.setState({\n          isPopupOpen: false\n      });\n    }\n\n    getSingleQuote = (id) => {\n      UserService.getSingleQuote(id).then(\n            response => {\n              if(response) {\n                  this.setState({\n                    isQuoteDetailActive:true,\n                    isQuoteEditActive: false,\n                    quoteItem: response.data\n                    \n                  });\n\n\n                }\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );   \n    };\n\n    quoteEdit = () => {\n        this.setState({\n            isQuoteEditActive:true\n          });\n    }\n    quoteCreateCallBack = (response) => {\n      var quoteItem = response.data;\n      quoteItem['Measures'] = quoteItem.measures;\n      this.setState({\n          isQuoteDetailActive:true,\n          isQuoteEditActive: false,\n          quoteItem: quoteItem\n      });\n\n\n      this.setState({\n        isPopupOpen: true,\n        popupConfig : {\n            header: \"Message\",\n            body:response.message,\n            type: \"message\"\n        }\n      });\n\n    }\n    render() {\n        return (  \n            <React.Fragment>\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)}></Popup>\n                 <Header/>\n                 <div className=\"page-body row\">\n                    <div className=\"col\">\n                        <QuoteList parentCallback = {this.selectedOuoteItem}/>\n                    </div>\n                    <div className=\"col\">\n                        {!this.state.isQuoteDetailActive ? <Quote parentCreateCallBack = {this.quoteCreateCallBack}/> : null }  \n                        {this.state.isQuoteDetailActive ? <QuoteDetail isQuoteEditActive = {this.state.isQuoteEditActive} parentEditCallBack = {this.quoteEdit} dataFromParent = {this.state.quoteItem} parentCallback = {this.selectedOuoteItem}/> : null }\n                    </div>\n                </div>\n                <Footer></Footer>\n            </React.Fragment>\n        );\n    }\n}\nexport default Dashboard;","import React, { Component } from 'react';\nclass Sidebar extends Component {\n\n    \n    constructor(props) {\n        super(props); \n        this.state = {\n            activeLink: 1,\n            leftMenu: []\n        } \n        this.selectMenu();\n    }\n    selectMenu() {\n        var adminFlag = JSON.parse(localStorage.getItem('user')).admin;\n        var menu = [];\n        if (adminFlag) {\n            menu = [\n                {\n                    id: 1,\n                    name: \"Quotes\",\n                    className: \"nav-quote-req\" \n                },\n                {\n                    id: 2,\n                    name: \"Projects \",\n                    className: \"nav-projects \"\n                },\n                {\n                    id: 3,\n                    name: \"Operations\",\n                    className: \"nav-operations\"\n                },\n                {\n                    id: 4,\n                    name: \"Inventory\",\n                    className: \"nav-inventory\"\n                },\n                {\n                    id: 5,\n                    name: \"Worker\",\n                    className: \"nav-workers\"\n                },\n                {\n                    id: 6,\n                    name: \"Customer\",\n                    className: \"nav-customer\"\n                },\n                {\n                    id: 7,\n                    name: \"Inspection\",\n                    className: \"nav-inspection\"\n                }\n            ];\n           \n        } else {\n             menu = [\n                {\n                    id: 1,\n                    name: \"Projects \",\n                    className: \"nav-projects \"\n                },\n                {\n                    id: 2,\n                    name: \"Operations\",\n                    className: \"nav-operations\"\n                },\n                {\n                    id: 3,\n                    name: \"Schedule\",\n                    className: \"nav-schedule\"\n                }\n            ];\n        }\n        this.state.leftMenu = menu\n    }\n    selectMenuItem(id) {\n        this.setState({ activeLink: id });\n        this.props.onClick(id);\n    }\n\n\n    render() {\n        \n        const { leftMenu, activeLink } = this.state;\n        return (\n            <React.Fragment>\n\n                    <div className=\"sidebar-div\">\n                        <ul className=\"nav flex-column\">\n                            {leftMenu && leftMenu.map(item => {\n                                return (\n                                    <li className={\n                                        item.className +\n                                        (item.id === activeLink ? \" nav-item active_item\" : \" nav-item\")\n                                      } key = {item.id}>\n                                        <p className=\"nav-link\" data-toggle=\"tab\" onClick={(e) => this.selectMenuItem(item.id)} >\n                                            <span>{item.name}</span>\n                                        </p>\n                                    </li>\n                                );\n                            })}\n                        </ul>\n                    </div>\n                    \n                \n            </React.Fragment>\n        );\n    }\n}\nexport default Sidebar;","export const statusColorClass = (status) => {\n  switch (status) {\n    case 'NEW':\n      return 'new';\n    case 'WIP':\n      return 'inProgress';\n    case 'QUOTE_RECEIVED':\n      return 'qtReceived';\n    case 'QUOTE_ACCEPTED':\n      return 'qtAccepted';\n    case 'QUOTE_PO_SUBMIT':\n      return 'submitted';\n    case 'QUOTE_REJECTED':\n      return 'rejected';\n    case 'PROJECT_IN_PROGRESS':\n      return 'projectInProgress';\n    case 'QUOTE_ADMIN_REJECTED':\n      return 'adminRejected';\n    case 'CLOSED':\n      return 'closed';\n    default:\n      return 'new';\n  }\n}\n\nexport const headerBtn = (status) => {\n  switch (status) {\n    case 'NEW':\n      return 1;\n    case 'WIP':\n      return 2;\n    case 'QUOTE_RECEIVED':\n      return 3;\n    case 'QUOTE_ACCEPTED':\n      return 4;\n    case 'QUOTE_PO_SUBMIT':\n      return 5;\n    case 'QUOTE_REJECTED':\n      return 4;\n    case 'PROJECT_IN_PROGRESS':\n      return 6;\n    case 'QUOTE_ADMIN_REJECTED':\n      return 6;\n    case 'CLOSED':\n      return 7;\n    default:\n      return 1;\n  }\n}","import React, { Component } from 'react';\nimport { Button, Table } from 'reactstrap';\nimport { Accordion, Card } from \"react-bootstrap\";\n\nimport { statusColorClass, headerBtn } from '../common/Utils.js';\nimport Popup from \"../components/Popup\";\nimport TableHeader from \"../components/TableHeader\";\nimport TableRow from \"../components/TableRow\";\n\nimport AdminService from \"../services/admin.service\";\n\nimport { validationMessages } from '../common/Constants';\n\nimport operationJson from '../../data/quoteItem.json';\n\nclass QuoteReqUpdate extends Component {\n  state = {\n    selectedItem: {},\n    open: false,\n    operationsList: [],\n    tagoperationList: [],\n    inspectionsList: [],\n    selectedInspection: '',\n    popupConfig: {},\n    isPopupOpen: false,\n    selectedOperationId: 0,\n    configOpId: 0,\n    totalCost: 0\n  }\n  constructor(props) {\n    super(props);\n    this.getSingleQuote();\n    this.getOperations();\n    this.getInspections();\n  }\n  getOperations = () => {\n    AdminService.getAllOperations().then(\n      response => {\n        if (response) {\n          this.setState({\n            tagoperationList: response.data.rows\n          });\n        }\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  };\n\n  getInspections = () => {\n    AdminService.getAllInspection().then(\n      response => {\n        if (response) {\n          this.setState({\n            inspectionsList: response.data.inspections.rows\n          });\n        }\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  };\n\n  getSingleQuote = () => {\n    AdminService.getSingleQuote(this.props.selectedQuoteId).then(\n      response => {\n        if (response) {\n          this.setState({\n            selectedItem: response.data\n          });\n        }\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  };\n  resetReq() {\n\n  }\n  showAvailableTools(id) {\n    this.setState({\n      configOpId: id,\n      selectedOperationId: id,\n      isPopupOpen: true,\n      popupConfig: {\n        header: \"Available Tools\",\n        body: '',\n        type: \"toolsList\"\n      }\n    });\n  }\n  showAvailableWorker(id) {\n    this.setState({\n      configOpId: id,\n      selectedOperationId: id,\n      isPopupOpen: true,\n      popupConfig: {\n        header: \"Available Workers\",\n        body: '',\n        type: \"workerList\"\n      }\n    });\n  }\n\n  saveQuoteUpdate() {\n\n\n    var tmptoolobj = [];\n    this.state.operationsList.QuoteOperationInv && this.state.operationsList.QuoteOperationInv.map((item, i) => {\n      var toolobj = {};\n      toolobj[\"invId\"] = item.Inventories.id;\n      toolobj[\"reqQty\"] = parseInt(item.req_quantity);\n      tmptoolobj.push(toolobj);\n    });\n\n\n    var tmpworkerobj = [];\n    this.state.operationsList.QuoteOperationWorker && this.state.operationsList.QuoteOperationWorker.map((item, i) => {\n      var workerobj = {};\n      workerobj[\"workerId\"] = item.Workers.id;\n      workerobj[\"totalHrs\"] = parseInt(item.total_hrs_req);\n      tmpworkerobj.push(workerobj);\n    });\n\n\n    var data = {\n      \"quoteId\": this.state.selectedItem.id,\n      \"status\": this.state.selectedItem.status,\n      \"operations\": [\n        {\n          \"operationId\": this.state.configOpId,\n          \"inspection\": this.state.selectedInspection,\n          \"operation_total_hrs\": this.state.operationsList.operation_total_hrs,\n          \"operation_cost\": this.state.operationsList.operation_cost,\n          \"tools\": tmptoolobj,\n          \"workers\": tmpworkerobj\n        }\n      ]\n    };\n    AdminService.tagQuote(data).then(\n      response => {\n        if(response)\n          this.showPopupMessage(response.data.message);\n        else \n          this.showPopupMessage(\"Something went wrong!\");\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n\n\n  }\n  submitQuoteUpdate() {\n    var data = {\n      \"status\": \"QUOTE_RECEIVED\"\n    };\n    AdminService.changeStatus(this.state.selectedItem.id, data).then(\n      response => {\n        console.log(response);\n        this.showPopupMessage(response.data.message);\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  }\n  changeQuoteStatus(status) {\n    var data = {\n      \"status\": status\n    };\n    AdminService.changeStatus(this.state.selectedItem.id, data).then(\n      response => {\n        console.log(response);\n        this.showPopupMessage(response.msg);\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n  }\n\n  showPopupMessage(message) {\n    this.setState({\n      isPopupOpen: true,\n      popupConfig: {\n        header: \"Message\",\n        body: message,\n        type: \"message\"\n      }\n    });\n  }\n\n  handleBreadCrumb() {\n    this.props.parentCallback();\n  }\n  deleteOperation(opId,opName,event) {\ndebugger;\n    this.setState({\n      deleteOpId: opId,\n      isPopupOpen: true,\n      popupConfig : {\n          header: \"Confirm to Delete\",\n          body:validationMessages.DELETE_CONFIRM+opName,\n          type: \"confirmation\"\n      }\n  });\n\n\n  }\n\n  removeTool() {\n    alert(\"Do you want to remove tool\");\n  }\n  handleChange = e => {\n    console.log(e);\n  }\n\n\n\n\n  handleReqAvailChange = event => {\n    let { value, min, max } = event.target;\n    value = Math.max(Number(min), Math.min(Number(max), Number(value)));\n    alert(value);\n    this.setState({ value });\n  }\n\n  handleClose = (list) => {\n\n    if (list && this.state.popupConfig.type === \"configureOperation\") {\n      var obj = this.state.tagoperationList.find(o => o.id == this.state.configOpId);\n      if (obj) {\n        var QuoteOperation = {\n          \"Operations\": {\n            \"id\": obj.id,\n            \"name\": obj.name,\n            \"desc\": obj.desc\n          },\n          \"QuoteOperationInv\": list.tools,\n          \"QuoteOperationWorker\": list.workers,\n          \"operation_cost\": list.totalCost,\n          \"operation_total_hrs\": list.workers.reduce((a, v) => a = parseInt(a) + parseInt(v.total_hrs_req), 0)\n        };\n        var newQuoteOperation = [...this.state.selectedItem.QuoteOperation, QuoteOperation];\n\n        var selectedItem = this.state.selectedItem;\n        selectedItem.QuoteOperation = newQuoteOperation;\n        this.setState({\n          operationsList: QuoteOperation\n        });\n        this.setState({\n          selectedItem\n        });\n      }\n    }\n    else if (list && this.state.popupConfig.type === \"toolsList\") {\n      console.log(this.state);\n      debugger;\n      var obj = this.state.selectedItem.QuoteOperation.find(o => o.Operations.id == this.state.configOpId);\n      if (obj) {\n        console.log(obj.QuoteOperationInv);\n        var newInventryList = [...obj.QuoteOperationInv, list.tools];\n        console.log(newInventryList);\n      }\n    } else if (list && this.state.popupConfig.type === \"operationList\") {\n      /*var tmp = this.state.operationsList;\n      tmp.push(list);\n      this.setState({\n        operationsList: tmp\n      });*/\n    }\n    this.setState({\n      isPopupOpen: false\n    });\n\n  };\n\n  handleModalYes = () => {\n\n    this.setState({\n      isPopupOpen: false\n    });\n\n\n    var tempList = this.state.selectedItem.QuoteOperation.filter(item => item.Operations.id !== this.state.deleteOpId);\n    var tmpSelectedItem = this.state.selectedItem;\n    tmpSelectedItem.QuoteOperation = tempList;\n    this.setState({\n      selectedItem: tmpSelectedItem\n    });\n\n\n\n    /*\n    AdminService.deleteQuote(this.state.selectedItem.id).then(\n      response => {\n        var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n        this.setState({\n          listitems: tempList,\n          selectedItem: []\n        });\n      },\n      error => {\n        console.log(\"Error\");\n      }\n    );\n    */\n\n\n  };\n\n  handleInspectionChange(event) {\n    this.setState({\n      selectedInspection: event.target.value\n    });\n  };\n\n  handleOperationChange(event) {\n    this.setState({\n      configOpId: event.target.value\n    });\n\n    this.setState({\n      isPopupOpen: true,\n      popupConfig: {\n        header: \"Configure Operations\",\n        body: '',\n        type: \"configureOperation\"\n      }\n    });\n\n  };\n\n\n\n\n  showOperationTools(inventory) {\n\n\n    var tableHeader = [\"inputCheckbox\", \"Tool Name\", \"Available Quantity\", \"Cost\", \"Required Quantity\"];\n    return (\n      <Table responsive=\"sm\">\n        <tbody>\n          <TableHeader\n            headerObj={tableHeader}\n            onCheckboxChange={this.handleChange}\n          />\n          {inventory && inventory.map((tool, i) => {\n            return (<TableRow\n              type=\"tool\"\n              listItem={tool.Inventories}\n              reqQty={tool.req_quantity}\n            />);\n          })\n          }\n        </tbody>\n      </Table>\n    );\n  }\n\n  showOperationWorkers(workers) {\n    var tableHeader = [\"inputCheckbox\", \"Worker Name\", \"Available per Day\", \"Cost per Hour\", \"Required Hour\"];\n    return (\n      <Table responsive=\"sm\">\n        <tbody>\n          <TableHeader\n            headerObj={tableHeader}\n            onCheckboxChange={this.handleChange}\n          />\n          {workers && workers.map((item, i) => {\n            return (<TableRow\n              type=\"worker\"\n              listItem={item.Workers}\n              reqQty={item.total_hrs_req}\n            />);\n          })\n          }\n        </tbody>\n      </Table>\n    );\n\n  }\n  getCost() {\n    if (this.state.selectedItem.QuoteOperation) {\n      return (this.state.selectedItem.QuoteOperation.reduce((a, v) => a = a + v.operation_cost, 0));\n    } else {\n      return (0);\n    }\n\n  };\n\n  renderMeasureTable() {\n    var measures = this.state.selectedItem.Measures;\n    return (<div className=\"quote-data-div\">\n      <span className=\"underline half blue\">Measurements</span>\n\n      <div className=\"row\">\n        <div className=\"col\">\n          <label>Name</label>\n        </div>\n        <div className=\"col\">\n          <label>Unit</label>\n        </div>\n        <div className=\"col\">\n          <label>Quantity</label>\n        </div>\n      </div>\n\n      {measures && measures.map((item, index) => {\n        return (\n          <div className=\"row pb-2 green-text-color\" key={item.id}>\n            <div className=\"col\">\n              <label>{item.name}</label>\n            </div>\n            <div className=\"col\">\n              <label>{item.unit}</label>\n            </div>\n            <div className=\"col\">\n              <label>{item.qty}</label>\n            </div>\n\n          </div>\n        )\n      })\n      }\n    </div>);\n  }\n\n  render() {\n\n    var userData = {};\n    var uploads = [];\n    if (this.state.selectedItem) {\n      userData = this.state.selectedItem.User;\n      uploads = this.state.selectedItem.Uploads;\n    }\n\n    return (\n      <React.Fragment>\n        <Popup popupConfig={this.state.popupConfig} openFlag={this.state.isPopupOpen} parentCloseCallback={this.handleClose} parentConfirmCallback={this.handleModalYes.bind(this)}></Popup>\n        <div className=\"col admin-quote-page\">\n          <div className=\"list-group-header section-header row\">\n            <div className=\"col-4\">\n\n              <nav aria-label=\"breadcrumb\">\n                <ul className=\"breadcrumb\">\n                  <li key=\"breadcrumb1\" className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                    <span className=\"mb-1 underline\">Quote</span>\n                    <span className=\"mb-1 blue-color pl-2\">Requests</span>\n                  </li>\n                  <li key=\"breadcrumb2\" className=\"breadcrumb-item active\" aria-current=\"page\">\n                    <span className=\"mb-1\">Update</span>\n                    <span className=\"mb-1 blue-color pl-2\">Quote</span>\n                  </li>\n                </ul>\n              </nav>\n\n            </div>\n\n          \n\n            {headerBtn(this.state.selectedItem.status) > 4 ? ( <div className=\"col-8 text-right\">\n                  <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.changeQuoteStatus(\"QUOTE_REJECTED\")} >Reject</button>\n                  <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.changeQuoteStatus(\"PROJECT_IN_PROGRESS\")}>Accept Purchase Order</button>\n                </div>) : (<div className=\"col-8 text-right\">\n                  <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                  <button type=\"button\" className=\"btn btn-info btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveQuoteUpdate()}>Save</button>\n                  <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.submitQuoteUpdate()}>Submit</button>\n                </div>)}\n\n\n          </div>\n          <div>\n            <div className=\"blue-box-div row\">\n              <div className=\"col-3 white-border-right\">\n                <div className=\"quote-data-div\">\n                  <span className=\"underline half blue\">Title</span>\n                  <span className={\"badge p-2 ml-2 float-right \" + statusColorClass(this.state.selectedItem.status)}>{this.state.selectedItem.status}</span>\n                  <p className=\"green-text-color\">{this.state.selectedItem.title}</p>\n                </div>\n\n                <div className=\"quote-data-div\">\n                  <span className=\"underline half blue\">Description</span>\n                  <p className=\"green-text-color\">{this.state.selectedItem.desc}</p>\n                </div>\n\n                <div className=\"quote-data-div\">\n                  <span className=\"underline half blue\">Submitted By</span>\n                  <p className=\"green-text-color\">{userData && userData.name}</p>\n                </div>\n\n                <div className=\"quote-data-div\">\n                  <span className=\"underline half blue\">Submitted On</span>\n                  <p className=\"green-text-color\">{(new Date(this.state.selectedItem.createdAt)).toLocaleDateString()}</p>\n                </div>\n                <div className=\"quote-data-div\">\n                  <span className=\"underline half blue\">Attachments</span>\n                  <p className=\"green-text-color\">{uploads && uploads.length}</p>\n\n                </div>\n                {this.state.selectedItem.Measures &&\n                  this.renderMeasureTable()\n                }\n              </div>\n\n\n              {this.state.selectedItem.status === \"PROJECT_IN_PROGRESS\" || this.state.selectedItem.status === \"QUOTE_PO_SUBMIT\" ?\n                <div className=\"col\">\n                  <div className=\"row\">\n                    <div className=\"purchase-order d-inline-block form-group col\">\n                      <span className=\"underline blue mb-2\">Order details</span>\n                      <div className=\"row ml-2\">\n                        <div className=\"col-md-8\">Operation Cost</div>\n                        <div className=\"col-md-2\">2</div>\n                        <div className=\"col-md-8\">Inspection Amount</div>\n                        <div className=\"col-md-2\">1</div>\n                        <div className=\"col-md-8\">Sub Total</div>\n                        <div className=\"col-md-2\">3</div>\n                        <div className=\"col-md-8\">Total tax</div>\n                        <div className=\"col-md-2\">5%</div>\n                        <div className=\"col-md-8\"></div>\n                        <div className=\"col-md-2\"></div>\n                        <div className=\"col-md-8\">Total Cost</div>\n                        <div className=\"col-md-2\">8</div>\n                      </div>\n\n                    </div>\n\n                    <div className=\"col\">\n                      <span className=\"underline blue mb-2\">Purchase Order</span>\n                      <img src={this.state.selectedItem.submittedPO} className='img-thumbnail' alt='...'></img>\n\n                    </div>\n\n                  </div>\n\n\n                </div>\n                :\n\n                (<div className=\"col quote-measurements\">\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <span className=\"underline blue\">Make a Quote</span>\n                    </div>\n                    <div className=\"col text-right\">\n\n\n                      <select className=\"form-control btn-green mb-2 mr-2 col-4 d-inline-block\" defaultValue={this.state.selectedItem.InspectionId} onChange={this.handleInspectionChange.bind(this)}>\n                        <option>Add Inspection</option>\n                        {this.state.inspectionsList && this.state.inspectionsList.map((item, index) => (\n                          <option key={item.id} value={item.id}>{item.name}</option>\n                        ))}\n                      </select>\n\n\n                      <select className=\"form-control btn-green mb-2 mr-2 col-4 d-inline-block\" onChange={this.handleOperationChange.bind(this)}>\n                        <option>Tag Operations</option>\n                        {this.state.tagoperationList && this.state.tagoperationList.map((item, index) => (\n                          <option key={item.id} value={item.id}>{item.name}</option>\n                        ))}\n                      </select>\n\n                      <span className=\"blue\">Total Cost</span>\n                      <span className=\"badge btn-blue p-2 ml-2\">{this.getCost()}</span>\n                    </div>\n                  </div>\n\n                  <div className=\"card-header measurements-header row mt-1 font-weight-bold\">\n                    <div className=\"col-sm\">\n                      <label>Operation</label>\n                    </div>\n                    <div className=\"col-sm\">\n                      <label >Description</label>\n                    </div>\n                    <div className=\"col-sm\">\n                      <label>Hours</label>\n                    </div>\n                    <div className=\"col-sm\">\n                      <label>Workers</label>\n                    </div>\n\n                    <div className=\"col-sm\">\n                      <label>Cost</label>\n                    </div>\n                    <div className=\"col-sm\">\n                      <label>Tools</label>\n                    </div>\n\n                  </div>\n\n                  <Accordion>\n\n                    {this.state.selectedItem.QuoteOperation && this.state.selectedItem.QuoteOperation.map((operation, i) => {\n                      return (\n\n                        <Card key={i + \"cardKey\"}>\n                          <Accordion.Toggle as={Card.Header} eventKey={i + \"\"}>\n\n                            <div className=\"row mt-1 green-text-color\">\n                              <div className=\"col-sm\">\n                                <label>{operation.Operations.name}</label>\n                              </div>\n                              <div className=\"col-sm\">\n                                <label className=\"acc-description\">{operation.Operations.desc}</label>\n                              </div>\n                              <div className=\"col-sm\">\n                                <label>{operation.operation_total_hrs}</label>\n                              </div>\n                              <div className=\"col-sm\">\n                                <label>{operation.QuoteOperationWorker && operation.QuoteOperationWorker.length}</label>\n                              </div>\n\n                              <div className=\"col-sm\">\n                                <label>{operation.operation_cost}</label>\n                              </div>\n                              <div className=\"col-sm\">\n                                <label>{operation.QuoteOperationInv && operation.QuoteOperationInv.length}</label>\n                                <button onClick={this.deleteOperation.bind(this,operation.Operations.id,operation.Operations.name)} className=\"btn delete-btn float-right mr-5\" ></button>\n                              </div>\n                            </div>\n\n                          </Accordion.Toggle>\n                          <Accordion.Collapse eventKey={i + \"\"}>\n                            <Card.Body>\n                             {/* \n  <button type=\"button\" className=\"btn btn-blue btn-sm ml-2 pr-4 pl-4\" onClick={() => this.showAvailableTools(operation.Operations.id)}>Add Tools</button>\n    <button type=\"button\" className=\"btn btn-blue btn-sm ml-2 pr-4 pl-4\" onClick={() => this.showAvailableWorker(operation.Operations.id)}>Add Workers</button>\n                                                        \n*/} \n                              {operation.QuoteOperationInv.length > 0 && this.showOperationTools(operation.QuoteOperationInv)}\n                              {operation.QuoteOperationWorker.length > 0 && this.showOperationWorkers(operation.QuoteOperationWorker)}\n                            </Card.Body>\n                          </Accordion.Collapse>\n                        </Card>\n\n                      );\n                    })}\n                  </Accordion>\n\n                </div>)\n              }\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </React.Fragment>\n    );\n  }\n}\nexport default QuoteReqUpdate;","import React, { Component } from 'react';\n\n\nimport AdminService from \"../services/admin.service\";\nimport EditQuote from './EditQuote';\n\nimport Popup from \"../components/Popup\";\nimport { validationMessages } from '../common/Constants';\nimport { statusColorClass } from '../common/Utils.js';\n\nclass ManageQuote extends Component {\n\n    state = {\n        searchValue: \"\",\n        selectedItem: [],\n        listitems: [],\n        updateQuotePage: false,\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n        this.getAllQuotes();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} parentConfirmCallback = {this.handleModalYes.bind(this)}></Popup>\n                {this.state.updateQuotePage ? <EditQuote selectedQuoteId= {this.state.selectedItem.id} parentCallback= {this.parentCallback}/> : this.renderQuoteList() }\n            </React.Fragment>\n        );\n    }\n    getAllQuotes() {\n        AdminService.getAllQuotes().then(\n            response => {\n                if(response){\n                    this.setState({\n                        listitems: response.data.rows\n                    });\n                }\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    onQuotereqSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    };\n\n    handleModalYes = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n        AdminService.deleteQuote(this.state.selectedItem.id).then(\n            response => {\n                var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n                this.setState({\n                    listitems: tempList,\n                    selectedItem: []\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    };\n\n    showPopup(message) {\n        this.setState({\n            isPopupOpen: true,\n            popupConfig : {\n                header: \"Message\",\n                body:message,\n                type: \"message\"\n            }\n        });\n    }\n    deleteQuote() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Confirm to Delete\",\n                    body:validationMessages.DELETE_CONFIRM+this.state.selectedItem.title,\n                    type: \"confirmation\"\n                }\n            });\n        }\n    }\n\n    editQuote() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                updateQuotePage: true\n            });\n        }\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: [],\n            updateQuotePage: false\n        });\n    }\n\n    renderQuoteList() {\n        return (<div className=\"col admin-list-page\">\n            <div className=\"list-group-header section-header row\">\n                <div className=\"col-4\">\n                    <span className=\"mb-1 underline\">Quote</span>\n                    <span className=\"mb-1 blue-color pl-2\">Requests</span>\n                </div>\n                <div className=\"col-8 text-right\">\n                    <div className=\"has-search\">\n                        <span className=\"fa fa-search form-control-feedback\"></span>\n                        <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search quote requests...\" onChange={this.handleSearchChange.bind(this)} />\n                    </div>\n                    <button className=\"btn delete-btn\" onClick={() => this.deleteQuote()}></button>\n                    <button className=\"btn edit-btn\" onClick={() => this.editQuote()}></button>\n\n                </div>\n            </div>\n            <div className=\"quote-req-list\">\n                <div className=\"row mt-1 quote-req-header\">\n                    <div className=\"col-4\">\n                        <label>Title</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Submitted by</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Received On</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Modified On</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Status</label>\n                    </div>\n                    <div className=\"col-sm text-right\">\n                        <label>Attachments</label>\n                    </div>\n                </div>\n                <div className=\"quote-req-table\">\n                    {this.state.listitems && this.state.listitems.filter(item =>\n                        item.title.toLowerCase().includes(this.state.searchValue)).map(item => (\n                            <div className=\"row mt-1\" key={item.id}>\n                                <div className=\"col-4\" >\n                                    <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                        <input type=\"radio\" className=\"toggle\"\n                                            name=\"quoteItem\" value={item.id}\n                                            onChange={() => this.onQuotereqSelected(item)} />\n                                        {item.title}\n                                    </label>\n                                </div>\n\n                                <div className=\"col-sm\">\n                                    <label>{item.User.name}</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>{(new Date(item.createdAt)).toLocaleDateString()}</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <label>{(new Date(item.updatedAt)).toLocaleDateString()}</label>\n                                </div>\n                                <div className=\"col-sm\">\n                                    <span className={\"badge \" + statusColorClass(item.status)} >{item.status}</span>\n                                </div>\n                                <div className=\"col-sm text-right\">\n                                    <span className=\"badge attachment-badge\">{item.Uploads && item.Uploads.length}</span>\n                                </div>\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </div>);\n    }\n    \n}\nexport default ManageQuote;","import React, { Component } from 'react';\nimport Popup from \"../components/Popup\";\n\nimport AdminService from \"../services/admin.service\";\n\nclass EditInventory extends Component {\n    state = {\n        item: this.props.selectedItem,\n        editInventoryPage: this.props.editInventoryPage,\n        popupConfig: {},\n        isPopupOpen: false,\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    saveInventory() {\n        if (this.state.item.id !== undefined) {\n            this.updateInventory();\n        } else {\n            this.createInventory();\n        }\n    }\n    updateInventory() {\n        var data = {\n            \"itemName\": this.state.item.itemName,\n            \"itemDesc\": this.state.item.itemDesc,\n            \"availability\": this.state.item.availability,\n            \"cost\": this.state.item.cost,\n            \"supplier_email\": this.state.item.supplierInfo,\n            \"operations\": []\n        };\n\n        AdminService.editInventory(this.state.item.id, data).then(\n            response => {\n                this.showPopupMessage(response.data.message);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    createInventory() {\n        var data = {\n            \"itemName\": this.state.item.itemName,\n            \"itemDesc\": this.state.item.itemDesc,\n            \"availability\": this.state.item.availability,\n            \"cost\": this.state.item.cost,\n            \"supplier_email\": this.state.item.supplierInfo,\n            \"operations\": []\n        };\n\n        AdminService.createInventory(data).then(\n            response => {\n                this.showPopupMessage(response.data.message);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    showPopupMessage(message) {\n        this.setState({\n          isPopupOpen: true,\n          popupConfig: {\n            header: \"Message\",\n            body: message,\n            type: \"message\"\n          }\n        });\n    }\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n\n    handleClose= () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Popup popupConfig={this.state.popupConfig} openFlag={this.state.isPopupOpen} parentCloseCallback={this.handleClose}></Popup>\n\n                <div className=\"col edit-inventory\">\n                    <div className=\"list-group-header section-header row\">\n                        <div className=\"col-4\">\n\n                            <nav aria-label=\"breadcrumb\">\n                                <ul className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                        <span className=\"mb-1 underline\">Manage</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Inventory</span>\n                                    </li>\n                                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                                        <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Inventory</span>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                        </div>\n                        <div className=\"col-8 text-right\">\n                            <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                            <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveInventory()}>Save</button>\n                        </div>\n                    </div>\n\n                    <div className=\"blue-box-div row\">\n                        <div className=\"col white-border-right\">\n                            <div>\n                                <span>Item Name</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.itemName}\n                                    onChange={this.handleChange.bind(this, 'itemName')} />\n                            </div>\n                            <div>\n                                <span>Description</span>\n                                <textarea className=\"form-control\" rows=\"3\"\n                                    defaultValue={this.state.item.itemDesc}\n                                    onChange={this.handleChange.bind(this, 'itemDesc')}></textarea>\n                            </div>\n\n\n\n                            <div className=\"col row\">\n                                <div className=\"col-xs-2\">\n                                    <span>Availability</span>\n                                    <input type=\"number\"\n                                        className=\"form-control\" defaultValue={this.state.item.availability}\n                                        onChange={this.handleChange.bind(this, 'availability')} />\n                                </div>\n                                <div className=\"col-xs-3 ml-4\">\n                                    <span>Supplier Email</span>\n                                    <input type=\"text\"\n                                        className=\"form-control d-inline\" defaultValue={this.state.item.supplierInfo}\n                                        onChange={this.handleChange.bind(this, 'supplierInfo')} />\n                                </div>\n                                <div className=\"col-xs-4\">\n                                    <a className=\"btn btn-sm btn-blue m-4 p-2\" href=\"mailto:someone@yoursite.com\">Contact Supplier</a>\n                                </div>\n                            </div>\n\n                            <div>\n                                <span>Cost</span>\n                                <input type=\"number\"\n                                    className=\"form-control\" defaultValue={this.state.item.cost}\n                                    onChange={this.handleChange.bind(this, 'cost')} />\n                            </div>\n\n                        </div>\n                        <div className=\"col\">\n                            <span> {this.state.item.operations_tagged ? 'Operatios Tagged' : 'No Operatios Tagged'}</span>\n\n                            <div>\n                                {this.state.item.operations_tagged && this.state.item.operations_tagged.map((operation, index) => (\n                                    <span className=\"badge tool-badge\">Operation {index + 1} - {operation}</span>\n                                )\n                                )}\n                            </div>\n                        </div>\n\n                    </div>\n\n\n\n                </div>\n\n\n            </React.Fragment>\n        );\n    }\n}\nexport default EditInventory;","import React, { Component } from 'react';\n\nimport Popup from \"../components/Popup\";\nimport { validationMessages } from '../common/Constants';\n\nimport EditInventory from './EditInventory';\nimport AdminService from \"../services/admin.service\";\n\nclass ManageInventory extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: [],\n        selectedItem: [],\n        editInventoryPage: false,\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n        this.getAllInventoryList();\n    }\n    getAllInventoryList() {\n        AdminService.getAllInventory().then(\n            response => {\n                if(response){\n                    this.setState({\n                        listitems: response.data.rows\n                    });\n                }\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    };\n\n    handleModalYes = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n        AdminService.deleteInventory(this.state.selectedItem.id).then(\n            response => {\n                var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n                this.setState({\n                    listitems: tempList,\n                    selectedItem: []\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n\n    };\n\n    editInventory() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Message\",\n                    body:validationMessages.NO_ITEM,\n                    type: \"message\"\n                }\n            });\n        } else {\n            this.setState({\n                editInventoryPage: true\n            });\n        }\n    }\n    addInventory() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editInventoryPage: true\n        });\n    }\n    deleteInventory() {\n        /* var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n        this.setState({\n            listitems: tempList\n        });\n        */\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Message\",\n                    body:validationMessages.NO_ITEM,\n                    type: \"message\"\n                }\n            });\n        } else {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Confirm to Delete\",\n                    body:\"Are you sure you want to delete \"+this.state.selectedItem.itemName,\n                    type: \"confirmation\"\n                }\n            });\n        }\n    }\n    onInventorySelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            editInventoryPage:false\n          });\n    }\n    renderInventoryList() {\n        return (<div className=\"col admin-list-page\">\n            <div className=\"list-group-header section-header row\">\n                <div className=\"col-4\">\n                    <span className=\"mb-1 underline\">Manage</span>\n                    <span className=\"mb-1 blue-color pl-2\">Inventory</span>\n                </div>\n                <div className=\"col-8 text-right\">\n                    <div className=\"has-search\">\n                        <span className=\"fa fa-search form-control-feedback\"></span>\n                        <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search quote requests...\" onChange={this.handleSearchChange.bind(this)} />\n                    </div>\n                    <button className=\"btn delete-btn\" onClick={() => this.deleteInventory()}></button>\n                    <button className=\"btn edit-btn\" onClick={() => this.editInventory()}></button>\n                    <button className=\"btn add-btn\" onClick={() => this.addInventory()}></button>\n                </div>\n            </div>\n            <div className=\"quote-req-list\">\n                <div className=\"row mt-1 quote-req-header\">\n                    <div className=\"col-sm\">\n                        <label>Item Name</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Description</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Availability</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Operations Taged</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Cost</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Created On</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Modified On</label>\n                    </div>\n                </div>\n                <div className=\"quote-req-table\">\n                {this.state.listitems && this.state.listitems.filter(item =>\n                        item.itemName.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n                    \n\n                        <div className=\"row mt-1\" key={listitem.id}>\n                            \n                            \n                            <div className=\"col-sm\" >\n                                <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                    <input type=\"radio\" className=\"toggle\"\n                                        name=\"quoteItem\" value={listitem.id}\n                                        onChange={() => this.onInventorySelected(listitem)} />\n                                    {listitem.itemName}\n                                </label>\n                                            \n                            </div>\n\n\n\n                            <div className=\"col-sm\" >\n                                <label className=\"description-truncate text-truncate\">{listitem.itemDesc}</label>\n                            </div>\n                            <div className=\"col-sm\" >\n                                <label>{listitem.availability}</label>\n                            </div>\n                            <div className=\"operation-div col-sm\" >\n\n                           \n        <label className=\"operation-text-truncate\">{listitem.operations_tagged}</label>\n        <span className=\"badge badge-light float-right\">{listitem.operations_tagged && listitem.operations_tagged.length}</span>\n        \n      \n\n                                \n                            \n                                </div>\n                            <div className=\"col-sm\" >\n                                <label>{listitem.cost}</label>\n                            </div>\n                            <div className=\"col-sm\" >\n                                <label>{(new Date(listitem.createdAt)).toLocaleDateString()}</label>\n                            </div>\n                            <div className=\"col-sm\" >\n                                <label>{(new Date(listitem.updatedAt)).toLocaleDateString()}</label>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} parentConfirmCallback = {this.handleModalYes.bind(this)}></Popup>\n                {this.state.editInventoryPage ? <EditInventory selectedItem={this.state.selectedItem} parentCallback= {this.parentCallback}/> : this.renderInventoryList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default ManageInventory;","import React, { Component } from 'react';\n\nimport MyAlert from \"../components/MyAlert\";\nimport AdminService from \"../services/admin.service\";\n\nclass EditOperations extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: [],\n            toolsList: [],\n            selectedTool: {},\n            showAlert: false,\n            alertConfig: {\n                \"variant\": \"danger\"\n            },\n            //workerList: [],\n            //selectedWorker: {}\n        }\n        this.getOperationById();\n        this.getAllTools();\n        //this.getAllWorkers();\n    }\n    getOperationById() {\n        AdminService.getOperationById(this.props.selectedId).then(\n            response => {\n                this.setState({\n                    item: response.data\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    getAllTools() {\n        AdminService.getAllInventory().then(\n            response => {\n                this.setState({\n                    toolsList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n\n    /*getAllWorkers() {\n        AdminService.getAllWorkers().then(\n            response => {\n                this.setState({\n                    workerList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    } */\n\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    handleToolSelection(event) {\n        var selectedTool = this.state.toolsList.find(o => o.id == event.target.value);\n        var newToolItem = {\n            \"Inventories\": selectedTool,\n            \"req_avail\": this.state.item.toolRequired\n        };\n        this.setState({ selectedTool: newToolItem });\n    }\n    /*handleWorkerSelection(event) {\n        this.state.selectedWorker = this.state.workerList.find(o => o.id == event.target.value);\n    }*/\n    showAlertMessage(msg) {\n        this.setState(prevState => ({\n            alertConfig: { \n                ...prevState.alertConfig,\n                message: msg\n            },\n            showAlert: true \n        }))\n    }\n\n    addTools(event) {\n        if (!this.state.selectedTool.Inventories || !this.state.item.toolRequired) {\n            this.showAlertMessage(\"Please select Tools / Materials and add Required quantity\");\n        } else {\n            this.setState({ showAlert: false });\n\n            if (this.state.item.id) {\n\n                this.state.selectedTool['req_avail'] = this.state.item.toolRequired;\n                var selectedOperation = this.state.item;\n                selectedOperation.OperationInventories.push(this.state.selectedTool);\n                this.setState({ item: selectedOperation });\n            } else {\n                var selectedOperation = this.state.item;\n                if (!selectedOperation.OperationInventories) {\n                    selectedOperation['OperationInventories'] = [];\n                }\n                var required_qty = this.state.item.toolRequired;\n                this.state.selectedTool['req_avail'] = required_qty;\n\n                selectedOperation.OperationInventories.push(this.state.selectedTool);\n                this.setState({ item: selectedOperation });\n            }\n        }\n    }\n    /*addWorker(event) {\n        if (this.state.item.id) {\n            this.state.selectedWorker['required_hrs'] = this.state.item.workerRequired;\n            this.state.selectedWorker['est_cost'] = parseInt(this.state.item.workerRequired) * parseInt(this.state.selectedWorker.cost_per_hr);\n            var selectedOperation = this.state.item;\n            selectedOperation.OperationWorkers.push(this.state.selectedWorker);\n            this.setState({ item: selectedOperation });\n        } else {\n            debugger;\n            var selectedOperation = this.state.item;\n            if (!selectedOperation.OperationWorkers) {\n                selectedOperation['OperationWorkers'] = [];\n            }\n            this.state.selectedWorker['required_hrs'] = this.state.item.workerRequired;\n            this.state.selectedWorker['est_cost'] = parseInt(this.state.item.workerRequired) * parseInt(this.state.selectedWorker.cost_per_hr);\n\n            selectedOperation.OperationWorkers.push(this.state.selectedWorker);\n            this.setState({ item: selectedOperation });\n        }\n\n    }*/\n\n    saveOperation() {\n        console.log(this.state.item);\n        var tmpworkerobj = [];\n        this.state.item.OperationWorkers.map((item, i) => {\n            if (item.id) {\n                var workerobj = {};\n                workerobj[\"id\"] = item.id;\n                workerobj[\"required_hrs\"] = item.required_hrs;\n                workerobj[\"est_cost\"] = item.est_cost;\n                tmpworkerobj.push(workerobj);\n            }\n        });\n        var tmpInvobj = [];\n        this.state.item.OperationInventories.map((item, i) => {\n            if (item.id) {\n                var invobj = {};\n                invobj[\"id\"] = item.id;\n                invobj[\"required_qty\"] = item.required_qty;\n                tmpInvobj.push(invobj);\n            }\n        });\n        var data = {\n            \"name\": this.state.item.name,\n            \"desc\": this.state.item.desc,\n            \"items\": tmpInvobj,\n            \"workers\": tmpworkerobj\n        };\n\n\n\n        if (this.state.item.id != undefined) {\n            AdminService.editOperation(this.state.item.id, data).then(\n                response => {\n                    console.log(response.data.message);\n                    //this.showPopupMessage(response.data.message);\n                },\n                error => {\n                    console.log(\"Error\");\n                }\n            );\n        } else {\n\n            AdminService.createOperation(data).then(\n                response => {\n                    console.log(response.data.message);\n                    //this.showPopupMessage(response.data.message);\n                },\n                error => {\n                    console.log(\"Error\");\n                }\n            );\n        }\n        this.props.parentCallback();\n    }\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n    renderToolsList() {\n        return (\n            <div className=\"col\">\n                <div className=\"row\">\n                    <div className=\"col-6\"><span>Tools and Materials</span></div>\n                    <div className=\"col-6\"><span>Required</span></div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <select className=\"form-control\" onChange={this.handleToolSelection.bind(this)}>\n                            <option>Select Tools</option>\n                            {this.state.toolsList.map((toolItem) => (\n                                <option key={toolItem.id} value={toolItem.id}>{toolItem.itemName}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"col-6\">\n                        <input type=\"number\" className=\"form-control col-6 d-inline\" onChange={this.handleChange.bind(this, 'toolRequired')} />\n                        <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4 d-inline\" onClick={this.addTools.bind(this)}>Add</button>\n                    </div>\n                    <div className=\"font-italic text-center col-8\">\n                    {this.state.showAlert && < MyAlert alertConfig = {this.state.alertConfig} /> }\n                    </div>\n                    \n                </div>\n                <div className=\"row mt-1 quote-req-header font-weight-bold\">\n                    <div className=\"col-sm\">\n                        <label>Tool/Material Name</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Required</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Availability</label>\n                    </div>\n                </div>\n\n                {this.state.item.OperationInventories.map((item) => (\n\n                    <div className=\"row mt-1\">\n                        <div className=\"col-sm\">\n                            <label>{item.Inventories && item.Inventories.itemName}</label>\n                        </div>\n                        <div className=\"col-sm\">\n                            <label>{item.req_avail}</label>\n                        </div>\n                        <div className=\"col-sm\">\n                            <label>{item.Inventories && item.Inventories.availability}</label>\n                        </div>\n                    </div>\n\n                ))}\n            </div>\n\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.state.item &&\n                    <div className=\"col edit-inventory\">\n                        <div className=\"list-group-header section-header row\">\n                            <div className=\"col-4\">\n\n                                <nav aria-label=\"breadcrumb\">\n                                    <ul className=\"breadcrumb\">\n                                        <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                            <span className=\"mb-1 underline\">Manage</span>\n                                            <span className=\"mb-1 blue-color pl-2\">Operation</span>\n                                        </li>\n                                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                                            <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                            <span className=\"mb-1 blue-color pl-2\">Operation</span>\n                                        </li>\n                                    </ul>\n                                </nav>\n\n                            </div>\n                            <div className=\"col-8 text-right\">\n                                <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                                <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveOperation()}>Save</button>\n                            </div>\n                        </div>\n\n                        <div className=\"blue-box-div row\">\n                            <div className=\"col-4 white-border-right\">\n                                <div>\n                                    <span>Operation Name</span>\n                                    <input type=\"text\"\n                                        className=\"form-control\" defaultValue={this.state.item.name}\n                                        onChange={this.handleChange.bind(this, 'name')} />\n                                </div>\n                                <div>\n                                    <span>Description</span>\n                                    <textarea className=\"form-control\" rows=\"3\"\n                                        defaultValue={this.state.item.desc}\n                                        onChange={this.handleChange.bind(this, 'desc')}></textarea>\n                                </div>\n\n                            </div>\n                            {this.state.item.OperationInventories && this.renderToolsList()}\n\n\n                        </div>\n                    </div>\n                }\n\n            </React.Fragment>\n        );\n    }\n}\nexport default EditOperations;","import React, { Component } from 'react';\nimport Popup from \"../components/Popup\";\nimport { validationMessages } from '../common/Constants';\nimport EditOperations from './EditOperations';\nimport AdminService from \"../services/admin.service\";\n\nclass ManageOperations extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: [],\n        selectedItem: [],\n        editOperationPage: false,\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n        this.getAllOperationList();\n    }\n    getAllOperationList() {\n        AdminService.getAllOperations().then(\n            response => {\n                this.setState({\n                    listitems: response.data.rows\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    };\n\n    handleModalYes = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n        AdminService.deleteOperation(this.state.selectedItem.id).then(\n            response => {\n                var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n                this.setState({\n                    listitems: tempList,\n                    selectedItem: []\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    };\n    editOperations() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Message\",\n                    body:validationMessages.NO_ITEM,\n                    type: \"message\"\n                }\n            });\n        } else {\n            this.setState({\n                editOperationPage: true\n            });\n        }\n    }\n    deleteOperations() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Message\",\n                    body:validationMessages.NO_ITEM,\n                    type: \"message\"\n                }\n            });\n        } else {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Confirm to Delete\",\n                    body:\"Are you sure you want to delete \"+this.state.selectedItem.name,\n                    type: \"confirmation\"\n                }\n            });\n        }\n    }\n    addOperations() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editOperationPage: true\n        });\n    }\n    onOperationSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editOperationPage:false\n          });\n    }\n    renderOperationsList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Operations</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search operations...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                            <button className=\"btn delete-btn\" onClick={() => this.deleteOperations()}></button>\n                            <button className=\"btn edit-btn\" onClick={() => this.editOperations()}></button>\n                            <button className=\"btn add-btn\" onClick={() => this.addOperations()}></button>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Operation Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Tools & Materials Required </label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Created On</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Modified On</label>\n                            </div>\n                            \n                        </div>\n                        <div className=\"quote-req-table\">\n\n                           {this.state.listitems && this.state.listitems.filter(item =>\n                                item.name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"operationItem\" value={listitem.id}\n                                                    onChange={() => this.onOperationSelected(listitem)} />\n                                                {listitem.name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                        \n                                            \n                                            <label className=\"description-truncate text-truncate\">\n                                            <span className=\"badge date-badge mr-2\">{listitem.toolsRequired.length}</span>\n                                                {listitem.toolsRequired.toString()}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.createdAt)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.updatedAt)).toLocaleDateString()}</label>\n                                        </div>\n                                        \n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} parentConfirmCallback = {this.handleModalYes.bind(this)}></Popup>\n                {this.state.editOperationPage ? <EditOperations selectedId={this.state.selectedItem.id} parentCallback= {this.parentCallback}/> : this.renderOperationsList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default ManageOperations;","import React, { Component } from 'react';\n\nimport AdminService from \"../services/admin.service\";\n\nclass EditWorker extends Component {\n    state = {\n        item: this.props.selectedItem,\n        editWorkerPage: this.props.editWorkerPage\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    saveWorker() {\n        if(this.state.item.id !== undefined) {\n            this.editWorker();\n        } else {\n            this.createWorker();\n        }\n        \n    }\n    editWorker() {\n        var data = {\n            \"name\": this.state.item.name,\n            \"phone\": this.state.item.phone,\n            \"address\" : this.state.item.address,\n            \"email\": this.state.item.email,\n            \"avail_per_day\": this.state.item.avail_per_day,\n            \"cost_per_hr\" : this.state.item.cost_per_hr,\n            \"total_avail_per_week\": this.state.item.total_avail_per_week,\n            \"professionId\": this.state.item.professionId\n        };\n        AdminService.editWorker(this.state.item.id, data).then(\n            response => {\n                this.props.parentCallback(response.data.message);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        ); \n    }\n    createWorker() {\n        console.log(this.state.item);\n        var data = {\n            \"name\": this.state.item.name,\n            \"phone\": this.state.item.phone,\n            \"address\" : this.state.item.address,\n            \"email\": this.state.item.email,\n            \"avail_per_day\": this.state.item.avail_per_day,\n            \"cost_per_hr\" : this.state.item.cost_per_hr,\n            \"total_avail_per_week\": this.state.item.total_avail_per_week,\n            \"professionId\": this.state.item.professionId\n        };\n\n        AdminService.createWorker(data).then(\n            response => {\n                this.props.parentCallback(response.data.message);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        ); \n    }\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"col edit-worker\">\n                    <div className=\"list-group-header section-header row\">\n                        <div className=\"col-4\">\n\n                            <nav aria-label=\"breadcrumb\">\n                                <ul className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                        <span className=\"mb-1 underline\">Manage</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Worker</span>\n                                    </li>\n                                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                                        <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Worker</span>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                        </div>\n                        <div className=\"col-8 text-right\">\n                            <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                            <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveWorker()}>Save</button>\n                        </div>\n                    </div>\n\n                    <div className=\"blue-box-div row\">\n                        <div className=\"col white-border-right\">\n                            <div>\n                                <span>Worker Name</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.name}\n                                    onChange={this.handleChange.bind(this, 'name')} />\n                            </div>\n                            <div>\n                                <span>Phone</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.phone}\n                                    onChange={this.handleChange.bind(this, 'phone')} />\n                            </div>\n                            <div>\n                                <span>Address</span>\n                                <textarea className=\"form-control\" rows=\"3\"\n                                    defaultValue={this.state.item.address}\n                                    onChange={this.handleChange.bind(this, 'address')}></textarea>\n                            \n                            </div>\n                            <div>\n                                <span>Email</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.email}\n                                    onChange={this.handleChange.bind(this, 'email')} />\n                            </div>\n                            <div>\n                                <span>Available per Day</span>\n                                <input type=\"number\"\n                                    className=\"form-control\" defaultValue={this.state.item.avail_per_day}\n                                    onChange={this.handleChange.bind(this, 'avail_per_day')} />\n                            </div>\n                            <div>\n                                <span>Cost per Hour</span>\n                                <input type=\"number\"\n                                    className=\"form-control\" defaultValue={this.state.item.cost_per_hr}\n                                    onChange={this.handleChange.bind(this, 'cost_per_hr')} />\n                            </div>\n                            <div>\n                                <span>Total Avalability per Week</span>\n                                <input type=\"number\"\n                                    className=\"form-control\" defaultValue={this.state.item.total_avail_per_week}\n                                    onChange={this.handleChange.bind(this, 'total_avail_per_week')} />\n                            </div>\n                            <div>\n                                <span>Profession</span>\n                                <select className=\"form-control\" defaultValue={this.state.item.professionId} onChange={this.handleChange.bind(this, 'professionId')} >\n                                    <option selected>Select a Profession</option>\n                                    <option value=\"1\">Engineer</option>\n                                    <option value=\"2\">Painter</option>\n                                </select>\n                            </div>\n                            \n                        </div>\n                        <div className=\"col\">\n                        <span> {this.state.item.operations_tagged ? 'Operatios Tagged' : 'No Operatios Tagged'}</span>\n                            \n                            <div>\n                                {this.state.item.operations_tagged && this.state.item.operations_tagged.map((operation, index) => (\n                                    <span className=\"badge tool-badge\">Operation {index + 1} - {operation}</span>\n                                )\n                                )}\n                            </div>\n                        </div>\n\n                    </div>\n\n\n\n                </div>\n\n\n            </React.Fragment>\n        );\n    }\n}\nexport default EditWorker;","import React, { Component } from 'react';\nimport Popup from \"../components/Popup\";\nimport { validationMessages } from '../common/Constants';\nimport EditWorker from './EditWorker';\nimport AdminService from \"../services/admin.service\";\n\nclass ManageWorker extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: [],\n        selectedItem: [],\n        editWorkerPage: false,\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n        this.getAllWorkerList();\n    }\n    getAllWorkerList() {\n        AdminService.getAllWorkers().then(\n            response => {\n                if(response) {\n                    this.setState({\n                        listitems: response.data.rows\n                    });\n                } \n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    editWorker() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                editWorkerPage: true\n            });\n        }\n    }\n    addWorker() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editWorkerPage: true\n        });\n    }\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    };\n\n    handleModalYes = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n        AdminService.deleteWorker(this.state.selectedItem.id).then(\n            response => {\n                var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n                this.setState({\n                    listitems: tempList,\n                    selectedItem: []\n                });\n                this.showPopup(response.data.message);\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    };\n\n    deleteWorker() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Confirm to Delete\",\n                    body:\"Are you sure you want to delete \"+this.state.selectedItem.name,\n                    type: \"confirmation\"\n                }\n            });\n        }\n    }\n    onWorkerSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    showPopup(message){\n        this.setState({\n            isPopupOpen: true,\n            popupConfig : {\n                header: \"Message\",\n                body:message,\n                type: \"message\"\n            }\n        });\n    }\n    parentCallback = (message) => {\n        if(message) this.showPopup(message);\n        this.setState({\n            editWorkerPage: false\n        });\n    }\n    renderWorkerList() {\n        return (<div className=\"col admin-list-page\">\n            <div className=\"list-group-header section-header row\">\n                <div className=\"col-4\">\n                    <span className=\"mb-1 underline\">Manage</span>\n                    <span className=\"mb-1 blue-color pl-2\">Worker</span>\n                </div>\n                <div className=\"col-8 text-right\">\n                    <div className=\"has-search\">\n                        <span className=\"fa fa-search form-control-feedback\"></span>\n                        <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search worker...\" onChange={this.handleSearchChange.bind(this)} />\n                    </div>\n                    <button className=\"btn delete-btn\" onClick={() => this.deleteWorker()}></button>\n                    <button className=\"btn edit-btn\" onClick={() => this.editWorker()}></button>\n                    <button className=\"btn add-btn\" onClick={() => this.addWorker()}></button>\n                </div>\n            </div>\n            <div className=\"quote-req-list\">\n                <div className=\"row mt-1 quote-req-header\">\n                    <div className=\"col-sm\">\n                        <label>Worker Name</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Phone</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Address</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Email</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Cost per Hour</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Availability per Week</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Created On</label>\n                    </div>\n                </div>\n                <div className=\"quote-req-table\">\n                    {this.state.listitems.filter(item =>\n                        item.name && item.name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n\n                            <div className=\"row mt-1\" key={listitem.email}>\n\n\n                                <div className=\"col-sm\" >\n                                    <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                        <input type=\"radio\" className=\"toggle\"\n                                            name=\"quoteItem\" value={listitem.email}\n                                            onChange={() => this.onWorkerSelected(listitem)} />\n                                        {listitem.name}\n                                    </label>\n\n                                </div>\n\n                                <div className=\"col-sm\" >\n                                    <label className=\"description-truncate text-truncate\">{listitem.phone}</label>\n                                </div>\n\n                                <div className=\"col-sm\" >\n                                    <label className=\"description-truncate text-truncate\" >{listitem.address}</label>\n                                </div>\n\n                                <div className=\"col-sm\" >\n                                    <label>{listitem.email}</label>\n                                </div>\n\n                                <div className=\"col-sm\" >\n                                    <label>{listitem.cost_per_hr}</label>\n                                </div>\n\n                                <div className=\"operation-div col-sm\" >\n\n                                    <label>{listitem.total_avail_per_week}</label>\n                                </div>\n\n                                <div className=\"col-sm\" >\n                                    <label>{(new Date(listitem.createdAt)).toLocaleDateString()}</label>\n                                </div>\n\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </div>);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} parentConfirmCallback = {this.handleModalYes.bind(this)}></Popup>\n                {this.state.editWorkerPage ? <EditWorker selectedItem={this.state.selectedItem} parentCallback={this.parentCallback} /> : this.renderWorkerList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default ManageWorker;","import React, { Component } from 'react';\n\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport AdminService from \"../services/admin.service\";\nimport Popup from \"../components/Popup\";\n\nclass EditProject extends Component {\n    constructor(props) {\n        super(props);\n        this.getAllWorkers();\n    }\n    state = {\n        item: this.props.selectedItem,\n        workerList: [],\n        selectedWorker: {},\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    handleDateChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = new Date(event);\n        this.setState({ item: item });\n    }\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n    showPopupMessage(message) {\n        this.setState({\n          isPopupOpen: true,\n          popupConfig: {\n            header: \"Message\",\n            body: message,\n            type: \"message\"\n          }\n        });\n    }\n    saveProject() {\n        \n        debugger;\n        var data = {\n            \"name\": this.state.item.name,\n            \"desc\": this.state.item.desc,\n            \"startDate\": this.state.item.start_date,\n            \"endDate\": this.state.item.end_date,\n            \"workers\": this.state.item.workers\n        };\n        AdminService.editProject(this.state.item.id,data).then(\n            response => {\n                this.showPopupMessage(response.data.message);\n                this.props.parentCallback();\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n    getAllWorkers() {\n        AdminService.getAllWorkers().then(\n            response => {\n                this.setState({\n                    workerList: response.data.rows\n                });\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    statusChange(event) {\n        var data = {\n            \"status\" : \"CLOSED\"\n        };\n        AdminService.changeProjectStatus(this.state.item.id,data).then(\n            response => {\n                this.showPopupMessage(response.data.message);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        );\n    }\n    handleWorkerSelection(event) {\n        this.state.selectedWorker = this.state.workerList.find(o => o.id == event.target.value);\n    }\n    addWorker(event) {\n            debugger;\n            this.state.selectedWorker['required_hrs'] = this.state.item.workerRequired;\n            //this.state.selectedWorker['est_cost'] = parseInt(this.state.item.workerRequired) * parseInt(this.state.selectedWorker.cost_per_hr);\n            var selectedProject = this.state.item;\n            if(!selectedProject.workers){\n                selectedProject['workers'] = [];\n            }\n            selectedProject.workers.push(this.state.selectedWorker);\n            this.setState({ item: selectedProject });\n            console.log(this.state.item);\n        \n    }\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"col edit-inventory\">\n                    <div className=\"list-group-header section-header row\">\n                        <div className=\"col-4\">\n\n                            <nav aria-label=\"breadcrumb\">\n                                <ul className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                        <span className=\"mb-1 underline\">Manage</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Project</span>\n                                    </li>\n                                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                                        <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Project</span>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                        </div>\n                        <div className=\"col-8 text-right\">\n                            <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                            <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveProject()}>Save</button>\n                        </div>\n                    </div>\n\n                    <div className=\"blue-box-div row\">\n                        <div className=\"col white-border-right\">\n                            <div>\n                                <span>Project Name</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.name}\n                                    onChange={this.handleChange.bind(this, 'name')} />\n                            </div>\n                            <div>\n                                <span>Description</span>\n                                <textarea className=\"form-control\" rows=\"3\"\n                                    defaultValue={this.state.item.desc}\n                                    onChange={this.handleChange.bind(this, 'desc')}></textarea>\n                            </div>\n\n                            <div>\n                                <span>Start Date</span>\n                                <DatePicker\n                                    selected={new Date(this.state.item.start_date)}\n                                    onChange={this.handleDateChange.bind(this, 'start_date')}\n                                    className=\"form-control\"\n                                    minDate = {new Date()}\n                                />\n                            </div>\n                            <div>\n                                <span>End Date</span>\n                                <DatePicker\n                                    selected={new Date(this.state.item.end_date)}\n                                    onChange={this.handleDateChange.bind(this, 'end_date')}\n                                    className=\"form-control\"\n                                    minDate={new Date(this.state.item.start_date)}\n                                />\n                            </div>\n                        </div>\n\n                        <div className=\"col\">\n                            \n\n                        <div className=\"row\">\n                                <div className=\"col\"><span>Worker</span></div>\n                                <div className=\"col\"><span>Required Hours</span></div>\n                            </div>\n\n                            <div className=\"row\">\n                                <div className=\"col\">\n                                    <select className=\"form-control\" onChange={this.handleWorkerSelection.bind(this)}>\n                                        <option selected>Select Worker</option>\n                                        {this.state.workerList.map((item) => (\n                                            <option key={item.id} value={item.id}>{item.name}</option>\n                                        ))}\n                                    </select>\n                                </div>\n\n                                <div className=\"col\">\n                                    <input type=\"number\" className=\"form-control col-2 d-inline\" onChange={this.handleChange.bind(this, 'workerRequired')}/>\n                                    <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4 d-inline\" onClick={this.addWorker.bind(this)}>Add</button>\n                                </div>\n\n                            </div>\n\n                            <div className=\"row mt-1 quote-req-header font-weight-bold\">\n                                    <div className=\"col-sm\">\n                                        <label>Name</label>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <label>Profession</label>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <label>Available Hours </label>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <label>Required Hours</label>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <label>Cost per hour</label>\n                                    </div>\n                                    <div className=\"col-sm\">\n                                        <label>Estimated Cost</label>\n                                    </div>\n                                </div>\n\n\n                                {this.state.item.workers && this.state.item.workers.map(listitem => (\n\n<div className=\"row mt-1\" >\n    <div className=\"col-sm\" >\n        <label className=\"description-truncate text-truncate\">{listitem.name}</label>\n    </div>\n    <div className=\"col-sm\" >\n        <label>{listitem.name}</label>\n    </div>\n    <div className=\"col-sm\" >\n        <label>{ listitem.avail_per_day}</label>\n    </div>\n    <div className=\"col-sm\" >\n        <label>{ listitem.required_hrs}</label>\n    </div>\n    <div className=\"col-sm\" >\n        <label>{ listitem.cost_per_hr}</label>\n    </div>\n    <div className=\"col-sm\" >\n        <label>{listitem.cost_per_hr * listitem.required_hrs}</label>\n    </div>\n</div>\n\n))}\n\n\n                            <div className=\"row\">\n                            <button type=\"button\" className=\"btn btn-green btn-sm m-4 pr-4 pl-4 d-inline\" onClick={this.statusChange.bind(this)}>Project Completed</button>\n                            </div>\n\n\n                        </div>\n                    </div>\n                </div>\n\n                <Popup popupConfig={this.state.popupConfig} openFlag={this.state.isPopupOpen} parentCloseCallback={this.handleClose} ></Popup>\n            </React.Fragment>\n        );\n    }\n}\nexport default EditProject;","import React, { Component } from 'react';\nimport Popup from \"../components/Popup\";\nimport { validationMessages } from '../common/Constants';\nimport {statusColorClass} from '../common/Utils.js';\nimport EditProject from './EditProject';\n\nimport AdminService from \"../services/admin.service\";\n\nclass ManageProjects extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: [],\n        selectedItem: [],\n        editProjectPage: false,\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n        this.getAllProjectList();\n    }\n    getAllProjectList() {\n        AdminService.getAllProjects().then(\n            response => {\n                if(response){\n                    this.setState({\n                        listitems: response.data.projects\n                    });\n                }\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    };\n\n    handleModalYes = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n        AdminService.deleteProject(this.state.selectedItem.id).then(\n            response => {\n                var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n                this.setState({\n                    listitems: tempList,\n                    selectedItem: []\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    };\n    editProjects() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Message\",\n                    body:validationMessages.NO_ITEM,\n                    type: \"message\"\n                }\n            });\n        } else {\n            this.setState({\n                editProjectPage: true\n            });\n        }\n    }\n    deleteProjects() {\n        /*var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n        this.setState({\n            listitems: tempList\n        });\n        */\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Message\",\n                    body:validationMessages.NO_ITEM,\n                    type: \"message\"\n                }\n            });\n        } else {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Confirm to Delete\",\n                    body:\"Are you sure you want to delete \"+this.state.selectedItem.name,\n                    type: \"confirmation\"\n                }\n            });\n        }\n    }\n    onProjectSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editProjectPage:false\n          });\n    }\n    getNumberOfDays(start, end) {\n        const date1 = new Date(start);\n        const date2 = new Date(end);\n        const oneDay = 1000 * 60 * 60 * 24;\n        const diffInTime = date2.getTime() - date1.getTime();\n        const diffInDays = Math.round(diffInTime / oneDay);\n        return diffInDays;\n    }\n    \n\n\n    renderProjectList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"projects-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Projects</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search quote requests...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                            <button className=\"btn delete-btn\" onClick={() => this.deleteProjects()}></button>\n                            <button className=\"btn edit-btn\" onClick={() => this.editProjects()}></button>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Project Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Days Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Days Left</label>\n                            </div>\n\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            \n                            \n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n\n                            {this.state.listitems.filter(item =>\n                                item.name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"projectItem\" value={listitem.id}\n                                                    onChange={() => this.onProjectSelected(listitem)} />\n                                                {listitem.name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{this.getNumberOfDays(listitem.start_date,listitem.end_date)}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            {(new Date(listitem.start_date) < new Date()) ? (<label>{this.getNumberOfDays(new Date(),listitem.end_date)}</label>) : <label>{this.getNumberOfDays(listitem.start_date,listitem.end_date)}</label>}\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.start_date)).toLocaleDateString() }</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.end_date)).toLocaleDateString() }</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className = {\"badge \" + statusColorClass(listitem.status)} >{listitem.status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} parentConfirmCallback = {this.handleModalYes.bind(this)}></Popup>\n                {this.state.editProjectPage ? <EditProject selectedItem={this.state.selectedItem} parentCallback= {this.parentCallback}/> : this.renderProjectList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default ManageProjects;","import React, { Component } from 'react';\nimport AdminService from \"../services/admin.service\";\n\nclass EditCustomer extends Component {\n    state = {\n        item: this.props.selectedItem,\n        editCustomerPage: this.props.editCustomerPage\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.item;\n        item[propertyName] = event.target.value;\n        this.setState({ item: item });\n    }\n    saveCustomer() {\n        if(this.state.item.id !== undefined) {\n            this.editCustomer();\n        } \n        this.props.parentCallback();\n    }\n\n    editCustomer() {\n        var data = {\n            \"name\": this.state.item.name,\n            \"email\": this.state.item.email,\n            \"phone\": this.state.item.phone,\n            \"address\" : this.state.item.address\n        };\n\n        AdminService.editCustomer(this.state.item.id, data).then(\n            response => {\n                console.log(response);\n                alert(response.data.message);\n            },\n            error => {\n                console.log(\"Error\");\n            }\n        ); \n    }\n\n    resetReq() {\n\n    }\n    handleBreadCrumb() {\n        this.props.parentCallback();\n    }\n    render() {\n        return (\n            <React.Fragment>\n\n                <div className=\"col edit-customer\">\n                    <div className=\"list-group-header section-header row\">\n                        <div className=\"col-4\">\n\n                            <nav aria-label=\"breadcrumb\">\n                                <ul className=\"breadcrumb\">\n                                    <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                                        <span className=\"mb-1 underline\">Manage</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Customer</span>\n                                    </li>\n                                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                                        <span className=\"mb-1\">{(this.state.item.length !== 0) ? 'Edit' : 'Add'}</span>\n                                        <span className=\"mb-1 blue-color pl-2\">Customer</span>\n                                    </li>\n                                </ul>\n                            </nav>\n\n                        </div>\n                        <div className=\"col-8 text-right\">\n                            <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\" onClick={() => this.resetReq()} >Reset</button>\n                            <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveCustomer()}>Save</button>\n                        </div>\n                    </div>\n\n                    <div className=\"blue-box-div row\">\n                        <div className=\"col\">\n                            <div>\n                                <span>Customer Name</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.name}\n                                    onChange={this.handleChange.bind(this, 'name')} />\n                            </div>\n                            <div>\n                                <span>Phone</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.phone}\n                                    onChange={this.handleChange.bind(this, 'phone')} />\n                            </div>\n                            <div>\n                                <span>Address</span>\n                                <textarea className=\"form-control\" rows=\"3\"\n                                    defaultValue={this.state.item.address}\n                                    onChange={this.handleChange.bind(this, 'address')}></textarea>\n                            \n                            </div>\n                            <div>\n                                <span>Email</span>\n                                <input type=\"text\"\n                                    className=\"form-control\" defaultValue={this.state.item.email}\n                                    onChange={this.handleChange.bind(this, 'email')} />\n                            </div>\n                            \n                            \n                        </div>\n                       \n\n                    </div>\n\n\n\n                </div>\n\n\n            </React.Fragment>\n        );\n    }\n}\nexport default EditCustomer;","import React, { Component } from 'react';\nimport Popup from \"../components/Popup\";\nimport { validationMessages } from '../common/Constants';\nimport EditCustomer from './EditCustomer';\nimport AdminService from \"../services/admin.service\";\n\n\nclass ManageCustomer extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: [],\n        selectedItem: [],\n        editCustomerPage: false,\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n        this.getAllCustomerList();\n    }\n    getAllCustomerList() {\n        AdminService.getAllCustomers().then(\n            response => {\n                if(response){\n                    this.setState({\n                        listitems: response.data.rows\n                    });\n                }\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n\n    handleModalYes = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n\n        AdminService.deleteCustomer(this.state.selectedItem.id).then(\n            response => {\n                var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n                this.setState({\n                    listitems: tempList,\n                    selectedItem: []\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n\n    }\n\n    editCustomer() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Message\",\n                    body:validationMessages.NO_ITEM,\n                    type: \"message\"\n                }\n            });\n        } else {\n            this.setState({\n                editCustomerPage: true\n            });\n        }\n    }\n\n    /*addCustomer() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editCustomerPage: true\n        });\n    }*/\n    \n    deleteCustomer() {\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Message\",\n                    body:validationMessages.NO_ITEM,\n                    type: \"message\"\n                }\n            });\n        } else {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Confirm to Delete\",\n                    body:\"Are you sure you want to delete \"+this.state.selectedItem.name,\n                    type: \"confirmation\"\n                }\n            });\n        }\n    }\n    onCustomerSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            editCustomerPage: false\n        });\n    }\n    renderCustomerList() {\n        return (<div className=\"col admin-list-page\">\n            <div className=\"list-group-header section-header row\">\n                <div className=\"col-4\">\n                    <span className=\"mb-1 underline\">Manage</span>\n                    <span className=\"mb-1 blue-color pl-2\">Customer</span>\n                </div>\n                <div className=\"col-8 text-right\">\n                    <div className=\"has-search\">\n                        <span className=\"fa fa-search form-control-feedback\"></span>\n                        <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search Customer...\" onChange={this.handleSearchChange.bind(this)} />\n                    </div>\n                    <button className=\"btn delete-btn\" onClick={() => this.deleteCustomer()}></button>\n                    <button className=\"btn edit-btn\" onClick={() => this.editCustomer()}></button>\n                </div>\n            </div>\n            <div className=\"quote-req-list\">\n                <div className=\"row mt-1 quote-req-header\">\n                    <div className=\"col-sm\">\n                        <label>Customer Name</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Phone</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Address</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Email</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>No of Request</label>\n                    </div>\n                </div>\n                <div className=\"quote-req-table\">\n                    {this.state.listitems.filter(item =>\n                        item.name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n\n                            <div className=\"row mt-1\" key={listitem.id}>\n\n\n                                <div className=\"col-sm\" >\n                                    <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                        <input type=\"radio\" className=\"toggle\"\n                                            name=\"quoteItem\" value={listitem.id}\n                                            onChange={() => this.onCustomerSelected(listitem)} />\n                                        {listitem.name}\n                                    </label>\n\n                                </div>\n\n                                <div className=\"col-sm\" >\n                                    <label className=\"description-truncate text-truncate\">{listitem.phone}</label>\n                                </div>\n\n                                <div className=\"col-sm\" >\n                                    <label>{listitem.address}</label>\n                                </div>\n\n                                <div className=\"col-sm\" >\n                                    <label>{listitem.email}</label>\n                                </div>\n                                \n                                <div className=\"col-sm\" >\n                                    <label>{listitem.Quotes}</label>\n                                </div>\n\n                            </div>\n                        ))}\n                </div>\n            </div>\n        </div>);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} parentConfirmCallback = {this.handleModalYes.bind(this)}></Popup>\n                {this.state.editCustomerPage ? <EditCustomer selectedItem={this.state.selectedItem} parentCallback={this.parentCallback} /> : this.renderCustomerList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default ManageCustomer;","import React, { Component } from 'react';\nimport Popup from \"../components/Popup\";\nimport { validationMessages } from '../common/Constants';\n\nimport AdminService from \"../services/admin.service\";\n\n\nclass ManageInspection extends Component {\n    state = {\n        \n        selectedItem: [],\n        editInspectionPage: false,\n        popupConfig: {},\n        isPopupOpen: false\n    }\n    constructor(props) {\n        super(props);\n        this.getAllInspectionList();\n    }\n    getAllInspectionList() {\n        AdminService.getAllInspection().then(\n            response => {\n                if(response){\n                    this.setState({\n                        listitems: response.data.inspections.rows\n                    });\n                }\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n\n    editInspection() {\n       \n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                editInspectionPage: true\n            });\n        }\n    }\n    addInspection() {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editInspectionPage: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n    }\n\n    handleModalYes = () => {\n        this.setState({\n            isPopupOpen: false\n        });\n        AdminService.deleteInspection(this.state.selectedItem.id).then(\n            response => {\n                this.showPopup(response.data.message);\n                var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n                this.setState({\n                    listitems: tempList,\n                    selectedItem: []\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );  \n    }\n\n    deleteInspection() {\n        /*var tempList = this.state.listitems.filter(item => item.id !== this.state.selectedItem.id);\n        this.setState({\n            listitems: tempList\n        });\n        */\n        if (this.state.selectedItem && this.state.selectedItem.length === 0) {\n            this.showPopup(validationMessages.NO_ITEM);\n        } else {\n            this.setState({\n                isPopupOpen: true,\n                popupConfig : {\n                    header: \"Confirm to Delete\",\n                    body:validationMessages.DELETE_CONFIRM+this.state.selectedItem.name,\n                    type: \"confirmation\"\n                }\n            });\n        }\n\n    }\n    onInspectionSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            editInspectionPage: false\n        });\n    }\n    handleFormChange(propertyName, event) {\n       \n    }\n    saveTaxUpdate() {\n\n    }\n    handleBreadCrumb() {\n        this.setState({\n            editInspectionPage: false\n        });\n    }\n    handleChange(propertyName, event) {\n        var item = this.state.selectedItem;\n        item[propertyName] = event.target.value;\n        this.setState({ selectedItem: item });\n    }\n    showPopup(message){\n        this.setState({\n            isPopupOpen: true,\n            popupConfig : {\n                header: \"Message\",\n                body:message,\n                type: \"message\"\n            }\n        });\n    }\n    saveInspection() {\n        if(this.state.selectedItem.id !== undefined) {\n            var data = {\n                \"name\": this.state.selectedItem.name,\n                \"cost\": parseInt(this.state.selectedItem.cost),\n                \"desc\": this.state.selectedItem.desc\n            };\n\n            AdminService.editInspection(this.state.selectedItem.id ,data).then(\n                response => {\n                    if(response){\n                        this.showPopup(response.data.message);\n                    }\n                },\n                error => {\n                  console.log(\"Error\");\n                }\n              );\n            \n\n\n        } else {\n            var data = {\n                \"name\": this.state.selectedItem.name,\n                \"cost\": parseInt(this.state.selectedItem.cost),\n                \"desc\": this.state.selectedItem.desc\n            };\n            AdminService.createInspection(data).then(\n                response => {\n                    if(response){\n                        this.showPopup(response.data.message);\n                    }\n                },\n                error => {\n                  console.log(\"Error\");\n                }\n              );\n            \n        }\n        \n    }\n  \n    renderEditInspection() {\n        return(<div className=\"col edit-customer\">\n        <div className=\"list-group-header section-header row\">\n            <div className=\"col-6\">\n\n                <nav aria-label=\"breadcrumb\">\n                    <ul className=\"breadcrumb\">\n                        <li className=\"breadcrumb-item\" onClick={this.handleBreadCrumb.bind(this)}>\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Inspection</span>\n                        </li>\n                        <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                            <span className=\"mb-1\">{(this.state.selectedItem.length !== 0) ? 'Edit' : 'Add'}</span>\n                            <span className=\"mb-1 blue-color pl-2\">Customer</span>\n                        </li>\n                    </ul>\n                </nav>\n\n            </div>\n            <div className=\"col-6 text-right\">\n                <button type=\"button\" className=\"btn btn-blue btn-sm pr-4 pl-4\"  >Reset</button>\n                <button type=\"button\" className=\"btn btn-green btn-sm ml-2 pr-4 pl-4\" onClick={() => this.saveInspection()}>Save</button>\n            </div>\n        </div>\n\n        <div className=\"blue-box-div row\">\n            <div className=\"col\">\n                <div>\n                    <span>Inspection Name</span>\n                    <input type=\"text\"\n                        className=\"form-control\" defaultValue={this.state.selectedItem.name}\n                        onChange={this.handleChange.bind(this, 'name')} />\n                </div>\n                \n                <div>\n                    <span>Description</span>\n                    <textarea className=\"form-control\" rows=\"3\" \n                                    defaultValue={this.state.selectedItem.desc}\n                                    onChange={this.handleChange.bind(this, 'desc')}\n                        ></textarea>\n                \n                </div>\n                <div>\n                    <span>Cost</span>\n                    <input type=\"number\"\n                        className=\"form-control\"  defaultValue={this.state.selectedItem.cost}\n                        onChange={this.handleChange.bind(this, 'cost')}/>\n                </div>\n                \n                \n            </div>\n           \n\n        </div>\n\n\n\n    </div>);\n    }\n    renderTax() {\n        return(\n            <div className=\"col admin-list-page\">\n                <div className=\"list-group-header section-header row\">\n                <div className=\"col-3\">\n                    <span className=\"mb-1 underline\">Manage</span>\n                    <span className=\"mb-1 blue-color pl-2\">Tax</span> \n                </div>\n            </div>\n            <div className=\"col-6 blue-box-div tax-div d-inline-block\">\n                            <label className=\"pr-2\">Tax</label>\n                            <input type=\"number\" className=\"form-control d-inline-block\"\n                                        \n                                        onChange={this.handleFormChange.bind(this, 'tax')}\n                                    />\n                            <label className=\"pl-2\">%</label>\n\n\n              <button type=\"button\" className=\"btn btn-info btn-sm float-right mr-4\" onClick={() => this.saveTaxUpdate()}>Update</button>\n\n            </div>\n            </div>\n        );\n    }\n    renderInspectionList() {\n        return (<div className=\"col admin-list-page\">\n            <div className=\"list-group-header section-header row\">\n                <div className=\"col-6\">\n                    <span className=\"mb-1 underline\">Manage</span>\n                    <span className=\"mb-1 blue-color pl-2\">Inspection</span>\n\n                    \n                </div>\n                <div className=\"col-6 text-right inspection-btngrp pt-2\">\n                    <button className=\"btn delete-btn\" onClick={() => this.deleteInspection()}></button>\n                    <button className=\"btn edit-btn\" onClick={() => this.editInspection()}></button>\n                    <button className=\"btn add-btn\" onClick={() => this.addInspection()}></button>\n                    \n                </div>\n\n\n            </div>\n            <div className=\"quote-req-list \">\n                <div className=\"row mt-1 quote-req-header\">\n                    <div className=\"col-sm\">\n                        <label>Inspection Name</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Inspection Desc</label>\n                    </div>\n                    <div className=\"col-sm\">\n                        <label>Inspection Cost</label>\n                    </div>\n                </div>\n                <div className=\"quote-req-table\">\n                    {this.state.listitems && this.state.listitems.map(listitem => (\n                            <div className=\"row mt-1\" key={listitem.id}>\n                                <div className=\"col-sm\" >\n                                    <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                        <input type=\"radio\" className=\"toggle\"\n                                            name=\"quoteItem\" value={listitem.id}\n                                            onChange={() => this.onInspectionSelected(listitem)} />\n                                        {listitem.name}\n                                    </label>\n\n                                </div>\n                                <div className=\"col-sm\" >\n                                    <label className=\"\">{listitem.desc}</label>\n                                </div>\n                                <div className=\"col-sm\" >\n                                    <label className=\"\">{listitem.cost}</label>\n                                </div>\n                            </div>\n                        ))}\n                </div>\n            </div>\n           \n        </div>);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {!this.state.editInspectionPage && this.renderInspectionList()}\n                {this.state.editInspectionPage && this.renderEditInspection()}\n                {this.renderTax()}\n                <Popup popupConfig = {this.state.popupConfig} openFlag = {this.state.isPopupOpen} parentCloseCallback={this.handleClose.bind(this)} parentConfirmCallback = {this.handleModalYes.bind(this)}></Popup>\n            </React.Fragment>\n        );\n    }\n}\nexport default ManageInspection;","import React from 'react';\n\nimport Header from '../common/Header';\nimport Footer from '../common/Footer';\nimport Slidebar from '../components/Sidebar';\n\nimport ManageQuote from './ManageQuote';\nimport ManageInventory from './ManageInventory';\nimport ManageOperations from './ManageOperations';\nimport ManageWorker from './ManageWorker';\nimport ManageProjects from './ManageProjects';\nimport ManageCustomer from './ManageCustomer';\nimport ManageInspections from './ManageInspections';\n\nclass AdminDashboard extends React.Component {\n    state = {\n        pageName: 1\n    }\n    switchPage(pageId) {\n        this.setState({\n            pageName: pageId\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"page-body row\">\n                    <Slidebar onClick={this.switchPage.bind(this)}></Slidebar>\n                    {(() => {\n                        switch (this.state.pageName) {\n                            case 1:\n                                return (\n                                    <ManageQuote></ManageQuote> \n                                )\n                            case 2:\n                                return (\n                                    <ManageProjects></ManageProjects>\n                                )\n                            case 3:\n                                return (\n                                    <ManageOperations></ManageOperations>  \n                                )\n                            case 4:\n                                return (\n                                    <ManageInventory></ManageInventory>    \n                                )\n                            case 5:\n                                return (\n                                    <ManageWorker></ManageWorker>\n                                )\n                            case 6:\n                                return (\n                                    <ManageCustomer></ManageCustomer>\n                                )\n                            case 7:\n                                return (\n                                    <ManageInspections></ManageInspections>\n                                )\n                            default:\n                                return (\n                                    <ManageQuote></ManageQuote>\n                                )\n                        }\n\n                    })()}\n\n                </div>\n                <Footer></Footer>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default AdminDashboard;","import React, { Component } from 'react';\n\nimport jsonData from \"../../data/operationsData.json\";\nimport AdminService from \"../services/admin.service\";\n\nclass WorkerOperations extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: jsonData.operationsList,\n        selectedItem: [],\n        editOperationPage: false\n    }\n    constructor(props) {\n        super(props);\n        //this.getAllOperationList();\n    }\n    getAllOperationList() {\n        AdminService.getAllOperations().then(\n            response => {\n                this.setState({\n                    listitems: response.data.operations\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n   \n    onOperationSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editOperationPage:false\n          });\n    }\n    renderOperationsList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Operations</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search quote requests...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Operation Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Left</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n\n                           {this.state.listitems.filter(item =>\n                                item.o_name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"operationItem\" value={listitem.id}\n                                                    onChange={() => this.onOperationSelected(listitem)} />\n                                                {listitem.o_name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.o_desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.createdAt}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.updatedAt}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hoursCommited}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hoursLeft}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderOperationsList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default WorkerOperations;","import React, { Component } from 'react';\nimport {statusColorClass} from '../common/Utils.js';\n\nimport AdminService from \"../services/admin.service\";\n\nimport jsonData from \"../../data/projectData.json\";\n\nclass WorkerProjects extends Component {\n    state = {\n        searchValue: \"\",\n        listitems: jsonData.projects,\n        selectedItem: [],\n        editProjectPage: false\n    }\n    constructor(props) {\n        super(props);\n        //this.getAllProjectList();\n    }\n    getAllProjectList() {\n        AdminService.getAllProjects().then(\n            response => {\n                this.setState({\n                    listitems: response.data.projects\n                });\n            },\n            error => {\n              console.log(\"Error\");\n            }\n          );\n          \n    }\n    handleSearchChange(e) {\n        this.setState({\n            searchValue: e.target.value.toLowerCase()\n        });\n    }\n    \n    onProjectSelected(selectedItem) {\n        this.setState({\n            selectedItem: selectedItem\n        });\n    }\n    parentCallback = () => {\n        this.setState({\n            selectedItem: []\n        });\n        this.setState({\n            editProjectPage:false\n          });\n    }\n    renderProjectList() {\n        return(\n            <div className=\"col admin-list-page\" id=\"projects-page\">\n                    <div className=\"list-group-header section-header row\">\n\n                        <div className=\"col-4\">\n                            <span className=\"mb-1 underline\">Manage</span>\n                            <span className=\"mb-1 blue-color pl-2\">Projects</span>\n                        </div>\n\n                        <div className=\"col-8 text-right\">\n                            <div className=\"has-search\">\n                                <span className=\"fa fa-search form-control-feedback\"></span>\n                                <input type=\"text\" className=\"form-control search-box\" placeholder=\"Search projects...\" onChange={this.handleSearchChange.bind(this)} />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"quote-req-list\">\n                        <div className=\"row mt-1 quote-req-header\">\n                            <div className=\"col-sm\">\n                                <label>Project Name</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Description</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Commited</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>Hours Left</label>\n                            </div>\n\n                            <div className=\"col-sm\">\n                                <label>Start Date</label>\n                            </div>\n                            <div className=\"col-sm\">\n                                <label>End Date</label>\n                            </div>\n                            \n                            \n                            <div className=\"col-sm\">\n                                <label>Status</label>\n                            </div>\n                        </div>\n                        <div className=\"quote-req-table\">\n                        \n                            {this.state.listitems.filter(item =>\n                                item.p_name.toLowerCase().includes(this.state.searchValue)).map(listitem => (\n\n                                    <div className=\"row mt-1\" key={listitem.id}>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"btn btn-default blue projectname-truncate text-truncate\">\n                                                <input type=\"radio\" className=\"toggle\"\n                                                    name=\"projectItem\" value={listitem.id}\n                                                    onChange={() => this.onProjectSelected(listitem)} />\n                                                {listitem.p_name}\n                                            </label>\n                                            \n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className=\"description-truncate text-truncate\">{listitem.p_desc}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hours_commited}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{listitem.hours_left}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.start_date)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label>{(new Date(listitem.end_date)).toLocaleDateString()}</label>\n                                        </div>\n                                        <div className=\"col-sm\" >\n                                            <label className = {\"badge \" + statusColorClass(listitem.p_status)} >{listitem.p_status}</label>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderProjectList()}\n            </React.Fragment>\n        );\n    }\n}\nexport default WorkerProjects;","\nimport React, { Component } from 'react';\n\nimport { ScheduleComponent, Day, Week, WorkWeek, Month, Agenda, Inject } from '@syncfusion/ej2-react-schedule';\n\nclass WorkerSchedule extends Component {\n    state = {\n       \n    }\n    constructor(props) {\n        super(props);\n        \n    }\n    render() {\n        return (\n            <div className=\"col admin-list-page\" id=\"operations-page\">\n            <ScheduleComponent>\n    <Inject services={[Day, Week, WorkWeek, Month, Agenda]}/>\n</ScheduleComponent>\n</div>\n        );\n    }\n}\nexport default WorkerSchedule;","import React from 'react';\n\nimport Header from '../common/Header';\nimport Footer from '../common/Footer';\nimport Slidebar from '../components/Sidebar';\n\n\nimport WorkerOperations from './WorkerOperations';\nimport WorkerProjects from './WorkerProjects';\nimport WorkerSchedule from './WorkerTimesheet';\n\nclass WorkerDashboard extends React.Component {\n    state = {\n        pageName: 1\n    }\n    switchPage(pageId) {\n        this.setState({\n            pageName: pageId\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Header />\n                <div className=\"page-body row\">\n                    <Slidebar onClick={this.switchPage.bind(this)}></Slidebar>\n                    {(() => {\n                        switch (this.state.pageName) {\n                            case 1:\n                                return (\n                                    <WorkerProjects></WorkerProjects>\n                                    \n                                )\n                            case 2:\n                                return (\n                                    <WorkerOperations></WorkerOperations>\n                                )\n                            case 3:\n                                return(\n                                    <WorkerSchedule></WorkerSchedule>\n                                    \n                                )\n                            default:\n                                return (\n                                    <WorkerSchedule></WorkerSchedule>\n                                )\n                        }\n\n                    })()}\n\n                </div>\n                <Footer></Footer>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default WorkerDashboard;","import React, { Component } from 'react';\n\nimport Login from '../user/Login';\nimport Dashboard from '../user/Dashboard';\nimport AdminDashboard from \"../admin/AdminDashboard\";\nimport WorkerDashboard from \"../worker/WorkerDashboard\";\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nclass Routes extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Router>\n                    <div className=\"container-fluid page-container\">\n                        <Switch>\n                            <Route exact path='/' component={Login} />\n                        </Switch>\n                        <Switch>\n                            <Route path='/Dashboard' component={Dashboard} />\n                        </Switch>\n                        <Switch>\n                            <Route path='/AdminDashboard' component={AdminDashboard} />\n                        </Switch>\n                        <Switch>\n                            <Route path='/WorkerDashboard' component={WorkerDashboard} />\n                        </Switch>\n                    </div>\n                </Router>\n            </React.Fragment>\n        );\n    }\n}\nexport default Routes;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Routes from './js/common/Routes';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/Common.scss';\n\nclass MyForm extends React.Component {\n  render() {\n    return (\n      <Routes></Routes>\n    );\n  }\n}\nReactDOM.render(<MyForm />, document.getElementById('root'));\nreportWebVitals();"],"sourceRoot":""}